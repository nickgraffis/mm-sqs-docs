import{_ as n}from"./Post.3c6da465.js";import{q as t,o as p,k as r,w as c,a as s,z as e}from"./vendor.09be1bf3.js";import"./app.3d6c68a9.js";const i=s("div",{class:"prose prose-sm text-left max-w-3xl mx-auto"},[s("h2",{id:"the-message-record",tabindex:"-1"},[s("a",{class:"header-anchor",href:"#the-message-record","aria-hidden":"true"},"#"),s("span",{class:"emoji-wrapper"},[s("span",{class:"native-emoji"})]),s("span",{class:"emoji-wrapper"},[s("span",{class:"native-emoji"},"The Message Record"),e(" The Message Record ")])]),s("p",null,[s("span",{class:"emoji-wrapper"},[s("span",{class:"native-emoji"},"The message record that is stored for each message looks like this:"),e(" The message record that is stored for each message looks like this: ")])]),s("div",{style:{position:"relative"}},[s("pre",{class:"shiki dracula twoslash lsp",style:{"background-color":"#282A36",color:"#F8F8F2"},include:"true",main:"true"},[s("div",{class:"language-id"},"ts"),s("code",{class:"code-container"},[s("div",{class:"line"},[s("span",{style:{color:"#FF79C6"}},"export"),s("span",{style:{color:"#F8F8F2"}}," "),s("span",{style:{color:"#FF79C6"}},"type"),s("span",{style:{color:"#F8F8F2"}}," "),s("span",{style:{color:"#8BE9FD","font-style":"italic"}},[s("data-lsp",{lsp:`<pre class="shiki"><div class="language-id">ts</div><div class='code-container'><code><span style="color: #FF79C6">type</span><span style="color: #F8F8F2"> </span><span style="color: #8BE9FD; font-style: italic">MessageRecord</span><span style="color: #F8F8F2">&lt;</span><span style="color: #FFB86C; font-style: italic">Meta</span><span style="color: #F8F8F2"> </span><span style="color: #FF79C6">=</span><span style="color: #F8F8F2"> </span><span style="color: #8BE9FD; font-style: italic">any</span><span style="color: #F8F8F2">, </span><span style="color: #FFB86C; font-style: italic">Body</span><span style="color: #F8F8F2"> </span><span style="color: #FF79C6">=</span><span style="color: #F8F8F2"> </span><span style="color: #8BE9FD; font-style: italic">any</span><span style="color: #F8F8F2">&gt; </span><span style="color: #FF79C6">=</span><span style="color: #F8F8F2"> {</span>
<span style="color: #F8F8F2">    pKey</span><span style="color: #FF79C6">:</span><span style="color: #F8F8F2"> </span><span style="color: #8BE9FD; font-style: italic">SQSMessageKey</span><span style="color: #F8F8F2">;</span>
<span style="color: #F8F8F2">    rKey</span><span style="color: #FF79C6">:</span><span style="color: #F8F8F2"> </span><span style="color: #8BE9FD; font-style: italic">SQSMessageKey</span><span style="color: #F8F8F2">;</span>
<span style="color: #F8F8F2">    id</span><span style="color: #FF79C6">:</span><span style="color: #F8F8F2"> </span><span style="color: #8BE9FD; font-style: italic">string</span><span style="color: #F8F8F2">;</span>
<span style="color: #F8F8F2">    url</span><span style="color: #FF79C6">:</span><span style="color: #F8F8F2"> </span><span style="color: #8BE9FD; font-style: italic">string</span><span style="color: #F8F8F2">;</span>
<span style="color: #F8F8F2">    meta</span><span style="color: #FF79C6">?:</span><span style="color: #F8F8F2"> </span><span style="color: #8BE9FD; font-style: italic">Meta</span><span style="color: #F8F8F2"> </span><span style="color: #FF79C6">|</span><span style="color: #F8F8F2"> </span><span style="color: #8BE9FD; font-style: italic">undefined</span><span style="color: #F8F8F2">;</span>
<span style="color: #F8F8F2">    body</span><span style="color: #FF79C6">:</span><span style="color: #F8F8F2"> </span><span style="color: #8BE9FD; font-style: italic">String</span><span style="color: #F8F8F2"> </span><span style="color: #FF79C6">&</span><span style="color: #F8F8F2"> </span><span style="color: #8BE9FD; font-style: italic">Stringified</span><span style="color: #F8F8F2">&lt;</span><span style="color: #FFB86C; font-style: italic">Body</span><span style="color: #F8F8F2">&gt;;</span>
<span style="color: #F8F8F2">    type</span><span style="color: #FF79C6">:</span><span style="color: #F8F8F2"> </span><span style="color: #8BE9FD; font-style: italic">RecordType</span><span style="color: #F8F8F2">;</span>
<span style="color: #F8F8F2">    startedAt</span><span style="color: #FF79C6">:</span><span style="color: #F8F8F2"> </span><span style="color: #8BE9FD; font-style: italic">string</span><span style="color: #F8F8F2">;</span>
<span style="color: #F8F8F2">    status</span><span style="color: #FF79C6">:</span><span style="color: #F8F8F2"> </span><span style="color: #8BE9FD; font-style: italic">Status</span><span style="color: #F8F8F2">;</span>
<span style="color: #F8F8F2">    statusCode</span><span style="color: #FF79C6">:</span><span style="color: #F8F8F2"> </span><span style="color: #8BE9FD; font-style: italic">StatusCode</span><span style="color: #F8F8F2">;</span>
<span style="color: #F8F8F2">    completedAt</span><span style="color: #FF79C6">:</span><span style="color: #F8F8F2"> </span><span style="color: #8BE9FD; font-style: italic">string</span><span style="color: #F8F8F2"> </span><span style="color: #FF79C6">|</span><span style="color: #F8F8F2"> </span><span style="color: #8BE9FD; font-style: italic">null</span><span style="color: #F8F8F2">;</span>
<span style="color: #F8F8F2">    updatedAt</span><span style="color: #FF79C6">:</span><span style="color: #F8F8F2"> </span><span style="color: #8BE9FD; font-style: italic">string</span><span style="color: #F8F8F2">;</span>
<span style="color: #F8F8F2">    expiresAt</span><span style="color: #FF79C6">:</span><span style="color: #F8F8F2"> </span><span style="color: #8BE9FD; font-style: italic">string</span><span style="color: #F8F8F2">;</span>
<span style="color: #F8F8F2">    consumtion_count</span><span style="color: #FF79C6">:</span><span style="color: #F8F8F2"> </span><span style="color: #8BE9FD; font-style: italic">number</span><span style="color: #F8F8F2">;</span>
<span style="color: #F8F8F2">    error</span><span style="color: #FF79C6">?:</span><span style="color: #F8F8F2"> </span><span style="color: #8BE9FD; font-style: italic">Error</span><span style="color: #F8F8F2">[] </span><span style="color: #FF79C6">|</span><span style="color: #F8F8F2"> </span><span style="color: #8BE9FD; font-style: italic">undefined</span><span style="color: #F8F8F2">;</span>
<span style="color: #F8F8F2">}</span></code></div></pre>`},"MessageRecord")]),s("span",{style:{color:"#F8F8F2"}},"<"),s("span",{style:{color:"#FFB86C","font-style":"italic"}},[s("data-lsp",{lsp:`<pre class="shiki"><div class="language-id">ts</div><div class='code-container'><code><span style="color: #F8F8F2">(type parameter) Meta </span><span style="color: #FF79C6">in</span><span style="color: #F8F8F2"> </span><span style="color: #FF79C6">type</span><span style="color: #F8F8F2"> </span><span style="color: #8BE9FD; font-style: italic">MessageRecord</span><span style="color: #F8F8F2">&lt;</span><span style="color: #FFB86C; font-style: italic">Meta</span><span style="color: #F8F8F2"> </span><span style="color: #FF79C6">=</span><span style="color: #F8F8F2"> </span><span style="color: #8BE9FD; font-style: italic">any</span><span style="color: #F8F8F2">, </span><span style="color: #FFB86C; font-style: italic">Body</span><span style="color: #F8F8F2"> </span><span style="color: #FF79C6">=</span><span style="color: #F8F8F2"> </span><span style="color: #8BE9FD; font-style: italic">any</span><span style="color: #F8F8F2">&gt;</span></code></div></pre>`},"Meta")]),s("span",{style:{color:"#F8F8F2"}}," "),s("span",{style:{color:"#FF79C6"}},"="),s("span",{style:{color:"#F8F8F2"}}," "),s("span",{style:{color:"#8BE9FD","font-style":"italic"}},"any"),s("span",{style:{color:"#F8F8F2"}},", "),s("span",{style:{color:"#FFB86C","font-style":"italic"}},[s("data-lsp",{lsp:`<pre class="shiki"><div class="language-id">ts</div><div class='code-container'><code><span style="color: #F8F8F2">(type parameter) Body </span><span style="color: #FF79C6">in</span><span style="color: #F8F8F2"> </span><span style="color: #FF79C6">type</span><span style="color: #F8F8F2"> </span><span style="color: #8BE9FD; font-style: italic">MessageRecord</span><span style="color: #F8F8F2">&lt;</span><span style="color: #FFB86C; font-style: italic">Meta</span><span style="color: #F8F8F2"> </span><span style="color: #FF79C6">=</span><span style="color: #F8F8F2"> </span><span style="color: #8BE9FD; font-style: italic">any</span><span style="color: #F8F8F2">, </span><span style="color: #FFB86C; font-style: italic">Body</span><span style="color: #F8F8F2"> </span><span style="color: #FF79C6">=</span><span style="color: #F8F8F2"> </span><span style="color: #8BE9FD; font-style: italic">any</span><span style="color: #F8F8F2">&gt;</span></code></div></pre>`},"Body")]),s("span",{style:{color:"#F8F8F2"}}," "),s("span",{style:{color:"#FF79C6"}},"="),s("span",{style:{color:"#F8F8F2"}}," "),s("span",{style:{color:"#8BE9FD","font-style":"italic"}},"any"),s("span",{style:{color:"#F8F8F2"}},"> "),s("span",{style:{color:"#FF79C6"}},"="),s("span",{style:{color:"#F8F8F2"}}," {")]),s("div",{class:"line"},[s("span",{style:{color:"#F8F8F2"}},[e("  "),s("data-lsp",{lsp:'<pre class="shiki"><div class="language-id">ts</div><div class=\'code-container\'><code><span style="color: #F8F8F2">(property) pKey: </span><span style="color: #F1FA8C">`SQSMessage$</span><span style="color: #FF79C6">${</span><span style="color: #F8F8F2">string</span><span style="color: #FF79C6">}</span><span style="color: #F1FA8C">`</span></code></div></pre>'},"pKey")]),s("span",{style:{color:"#FF79C6"}},":"),s("span",{style:{color:"#F8F8F2"}}," "),s("span",{style:{color:"#8BE9FD","font-style":"italic"}},[s("data-lsp",{lsp:'<pre class="shiki"><div class="language-id">ts</div><div class=\'code-container\'><code><span style="color: #FF79C6">type</span><span style="color: #F8F8F2"> </span><span style="color: #8BE9FD; font-style: italic">SQSMessageKey</span><span style="color: #F8F8F2"> </span><span style="color: #FF79C6">=</span><span style="color: #F8F8F2"> </span><span style="color: #F1FA8C">`SQSMessage$</span><span style="color: #FF79C6">${</span><span style="color: #8BE9FD; font-style: italic">string</span><span style="color: #FF79C6">}</span><span style="color: #F1FA8C">`</span></code></div></pre>'},"SQSMessageKey")])]),s("div",{class:"line"},[s("span",{style:{color:"#F8F8F2"}},[e("  "),s("data-lsp",{lsp:'<pre class="shiki"><div class="language-id">ts</div><div class=\'code-container\'><code><span style="color: #F8F8F2">(property) rKey: </span><span style="color: #F1FA8C">`SQSMessage$</span><span style="color: #FF79C6">${</span><span style="color: #F8F8F2">string</span><span style="color: #FF79C6">}</span><span style="color: #F1FA8C">`</span></code></div></pre>'},"rKey")]),s("span",{style:{color:"#FF79C6"}},":"),s("span",{style:{color:"#F8F8F2"}}," "),s("span",{style:{color:"#8BE9FD","font-style":"italic"}},[s("data-lsp",{lsp:'<pre class="shiki"><div class="language-id">ts</div><div class=\'code-container\'><code><span style="color: #FF79C6">type</span><span style="color: #F8F8F2"> </span><span style="color: #8BE9FD; font-style: italic">SQSMessageKey</span><span style="color: #F8F8F2"> </span><span style="color: #FF79C6">=</span><span style="color: #F8F8F2"> </span><span style="color: #F1FA8C">`SQSMessage$</span><span style="color: #FF79C6">${</span><span style="color: #8BE9FD; font-style: italic">string</span><span style="color: #FF79C6">}</span><span style="color: #F1FA8C">`</span></code></div></pre>'},"SQSMessageKey")])]),s("div",{class:"line"},[s("span",{style:{color:"#F8F8F2"}},[e("  "),s("data-lsp",{lsp:`<pre class="shiki"><div class="language-id">ts</div><div class='code-container'><code><span style="color: #F8F8F2">(property) id: string</span></code></div></pre>`},"id")]),s("span",{style:{color:"#FF79C6"}},":"),s("span",{style:{color:"#F8F8F2"}}," "),s("span",{style:{color:"#8BE9FD","font-style":"italic"}},"string")]),s("div",{class:"line"},[s("span",{style:{color:"#F8F8F2"}},[e("  "),s("data-lsp",{lsp:`<pre class="shiki"><div class="language-id">ts</div><div class='code-container'><code><span style="color: #F8F8F2">(property) url: string</span></code></div></pre>`},"url")]),s("span",{style:{color:"#FF79C6"}},":"),s("span",{style:{color:"#F8F8F2"}}," "),s("span",{style:{color:"#8BE9FD","font-style":"italic"}},"string")]),s("div",{class:"line"},[s("span",{style:{color:"#F8F8F2"}},[e("  "),s("data-lsp",{lsp:`<pre class="shiki"><div class="language-id">ts</div><div class='code-container'><code><span style="color: #F8F8F2">(property) meta</span><span style="color: #FF79C6">?:</span><span style="color: #F8F8F2"> Meta </span><span style="color: #FF79C6">|</span><span style="color: #F8F8F2"> </span><span style="color: #BD93F9">undefined</span></code></div></pre>`},"meta")]),s("span",{style:{color:"#FF79C6"}},"?:"),s("span",{style:{color:"#F8F8F2"}}," "),s("span",{style:{color:"#8BE9FD","font-style":"italic"}},[s("data-lsp",{lsp:`<pre class="shiki"><div class="language-id">ts</div><div class='code-container'><code><span style="color: #F8F8F2">(type parameter) Meta </span><span style="color: #FF79C6">in</span><span style="color: #F8F8F2"> </span><span style="color: #FF79C6">type</span><span style="color: #F8F8F2"> </span><span style="color: #8BE9FD; font-style: italic">MessageRecord</span><span style="color: #F8F8F2">&lt;</span><span style="color: #FFB86C; font-style: italic">Meta</span><span style="color: #F8F8F2"> </span><span style="color: #FF79C6">=</span><span style="color: #F8F8F2"> </span><span style="color: #8BE9FD; font-style: italic">any</span><span style="color: #F8F8F2">, </span><span style="color: #FFB86C; font-style: italic">Body</span><span style="color: #F8F8F2"> </span><span style="color: #FF79C6">=</span><span style="color: #F8F8F2"> </span><span style="color: #8BE9FD; font-style: italic">any</span><span style="color: #F8F8F2">&gt;</span></code></div></pre>`},"Meta")])]),s("div",{class:"line"},[s("span",{style:{color:"#F8F8F2"}},[e("  "),s("data-lsp",{lsp:`<pre class="shiki"><div class="language-id">ts</div><div class='code-container'><code><span style="color: #F8F8F2">(property) body: </span><span style="color: #8BE9FD; font-style: italic">String</span><span style="color: #F8F8F2"> </span><span style="color: #FF79C6">&</span><span style="color: #F8F8F2"> Stringified</span><span style="color: #FF79C6">&lt;</span><span style="color: #F8F8F2">Body</span><span style="color: #FF79C6">&gt;</span></code></div></pre>`},"body")]),s("span",{style:{color:"#FF79C6"}},":"),s("span",{style:{color:"#F8F8F2"}}," "),s("span",{style:{color:"#8BE9FD","font-style":"italic"}},[s("data-lsp",{lsp:`<pre class="shiki"><div class="language-id">ts</div><div class='code-container'><code><span style="color: #FF79C6">interface</span><span style="color: #F8F8F2"> </span><span style="color: #8BE9FD; font-style: italic">String</span></code></div></pre>`},"String")]),s("span",{style:{color:"#F8F8F2"}}," "),s("span",{style:{color:"#FF79C6"}},"&"),s("span",{style:{color:"#F8F8F2"}}," "),s("span",{style:{color:"#8BE9FD","font-style":"italic"}},[s("data-lsp",{lsp:`<pre class="shiki"><div class="language-id">ts</div><div class='code-container'><code><span style="color: #FF79C6">class</span><span style="color: #F8F8F2"> </span><span style="color: #8BE9FD">Stringified</span><span style="color: #F8F8F2">&lt;</span><span style="color: #FFB86C; font-style: italic">T</span><span style="color: #F8F8F2">&gt;</span></code></div></pre>`},"Stringified")]),s("span",{style:{color:"#F8F8F2"}},"<"),s("span",{style:{color:"#FFB86C","font-style":"italic"}},[s("data-lsp",{lsp:`<pre class="shiki"><div class="language-id">ts</div><div class='code-container'><code><span style="color: #F8F8F2">(type parameter) Body </span><span style="color: #FF79C6">in</span><span style="color: #F8F8F2"> </span><span style="color: #FF79C6">type</span><span style="color: #F8F8F2"> </span><span style="color: #8BE9FD; font-style: italic">MessageRecord</span><span style="color: #F8F8F2">&lt;</span><span style="color: #FFB86C; font-style: italic">Meta</span><span style="color: #F8F8F2"> </span><span style="color: #FF79C6">=</span><span style="color: #F8F8F2"> </span><span style="color: #8BE9FD; font-style: italic">any</span><span style="color: #F8F8F2">, </span><span style="color: #FFB86C; font-style: italic">Body</span><span style="color: #F8F8F2"> </span><span style="color: #FF79C6">=</span><span style="color: #F8F8F2"> </span><span style="color: #8BE9FD; font-style: italic">any</span><span style="color: #F8F8F2">&gt;</span></code></div></pre>`},"Body")]),s("span",{style:{color:"#F8F8F2"}},">")]),s("div",{class:"line"},[s("span",{style:{color:"#F8F8F2"}},[e("  "),s("data-lsp",{lsp:`<pre class="shiki"><div class="language-id">ts</div><div class='code-container'><code><span style="color: #F8F8F2">(property) type: RecordType</span></code></div></pre>`},"type")]),s("span",{style:{color:"#FF79C6"}},":"),s("span",{style:{color:"#F8F8F2"}}," "),s("span",{style:{color:"#8BE9FD","font-style":"italic"}},[s("data-lsp",{lsp:`<pre class="shiki"><div class="language-id">ts</div><div class='code-container'><code><span style="color: #FF79C6">enum</span><span style="color: #F8F8F2"> </span><span style="color: #8BE9FD; font-style: italic">RecordType</span></code></div></pre>`},"RecordType")])]),s("div",{class:"line"},[s("span",{style:{color:"#F8F8F2"}},[e("  "),s("data-lsp",{lsp:`<pre class="shiki"><div class="language-id">ts</div><div class='code-container'><code><span style="color: #F8F8F2">(property) startedAt: string</span></code></div></pre>`},"startedAt")]),s("span",{style:{color:"#FF79C6"}},":"),s("span",{style:{color:"#F8F8F2"}}," "),s("span",{style:{color:"#8BE9FD","font-style":"italic"}},"string")]),s("div",{class:"line"},[s("span",{style:{color:"#F8F8F2"}},[e("  "),s("data-lsp",{lsp:`<pre class="shiki"><div class="language-id">ts</div><div class='code-container'><code><span style="color: #F8F8F2">(property) status: Status</span></code></div></pre>`},"status")]),s("span",{style:{color:"#FF79C6"}},":"),s("span",{style:{color:"#F8F8F2"}}," "),s("span",{style:{color:"#8BE9FD","font-style":"italic"}},[s("data-lsp",{lsp:`<pre class="shiki"><div class="language-id">ts</div><div class='code-container'><code><span style="color: #FF79C6">enum</span><span style="color: #F8F8F2"> </span><span style="color: #8BE9FD; font-style: italic">Status</span></code></div></pre>`},"Status")])]),s("div",{class:"line"},[s("span",{style:{color:"#F8F8F2"}},[e("  "),s("data-lsp",{lsp:`<pre class="shiki"><div class="language-id">ts</div><div class='code-container'><code><span style="color: #F8F8F2">(property) statusCode: StatusCode</span></code></div></pre>`},"statusCode")]),s("span",{style:{color:"#FF79C6"}},":"),s("span",{style:{color:"#F8F8F2"}}," "),s("span",{style:{color:"#8BE9FD","font-style":"italic"}},[s("data-lsp",{lsp:`<pre class="shiki"><div class="language-id">ts</div><div class='code-container'><code><span style="color: #FF79C6">enum</span><span style="color: #F8F8F2"> </span><span style="color: #8BE9FD; font-style: italic">StatusCode</span></code></div></pre>`},"StatusCode")])]),s("div",{class:"line"},[s("span",{style:{color:"#F8F8F2"}},[e("  "),s("data-lsp",{lsp:`<pre class="shiki"><div class="language-id">ts</div><div class='code-container'><code><span style="color: #F8F8F2">(property) completedAt: string </span><span style="color: #FF79C6">|</span><span style="color: #F8F8F2"> </span><span style="color: #BD93F9">null</span></code></div></pre>`},"completedAt")]),s("span",{style:{color:"#FF79C6"}},":"),s("span",{style:{color:"#F8F8F2"}}," "),s("span",{style:{color:"#8BE9FD","font-style":"italic"}},"string"),s("span",{style:{color:"#F8F8F2"}}," "),s("span",{style:{color:"#FF79C6"}},"|"),s("span",{style:{color:"#F8F8F2"}}," "),s("span",{style:{color:"#8BE9FD","font-style":"italic"}},"null")]),s("div",{class:"line"},[s("span",{style:{color:"#F8F8F2"}},[e("  "),s("data-lsp",{lsp:`<pre class="shiki"><div class="language-id">ts</div><div class='code-container'><code><span style="color: #F8F8F2">(property) updatedAt: string</span></code></div></pre>`},"updatedAt")]),s("span",{style:{color:"#FF79C6"}},":"),s("span",{style:{color:"#F8F8F2"}}," "),s("span",{style:{color:"#8BE9FD","font-style":"italic"}},"string")]),s("div",{class:"line"},[s("span",{style:{color:"#F8F8F2"}},[e("  "),s("data-lsp",{lsp:`<pre class="shiki"><div class="language-id">ts</div><div class='code-container'><code><span style="color: #F8F8F2">(property) expiresAt: string</span></code></div></pre>`},"expiresAt")]),s("span",{style:{color:"#FF79C6"}},":"),s("span",{style:{color:"#F8F8F2"}}," "),s("span",{style:{color:"#8BE9FD","font-style":"italic"}},"string")]),s("div",{class:"line"},[s("span",{style:{color:"#F8F8F2"}},[e("  "),s("data-lsp",{lsp:`<pre class="shiki"><div class="language-id">ts</div><div class='code-container'><code><span style="color: #F8F8F2">(property) consumtion_count: number</span></code></div></pre>`},"consumtion_count")]),s("span",{style:{color:"#FF79C6"}},":"),s("span",{style:{color:"#F8F8F2"}}," "),s("span",{style:{color:"#8BE9FD","font-style":"italic"}},"number")]),s("div",{class:"line"},[s("span",{style:{color:"#F8F8F2"}},[e("  "),s("data-lsp",{lsp:`<pre class="shiki"><div class="language-id">ts</div><div class='code-container'><code><span style="color: #F8F8F2">(property) error</span><span style="color: #FF79C6">?:</span><span style="color: #F8F8F2"> </span><span style="color: #8BE9FD; font-style: italic">Error</span><span style="color: #F8F8F2">[] </span><span style="color: #FF79C6">|</span><span style="color: #F8F8F2"> </span><span style="color: #BD93F9">undefined</span></code></div></pre>`},"error")]),s("span",{style:{color:"#FF79C6"}},"?:"),s("span",{style:{color:"#F8F8F2"}}," "),s("span",{style:{color:"#8BE9FD","font-style":"italic"}},[s("data-lsp",{lsp:`<pre class="shiki"><div class="language-id">ts</div><div class='code-container'><code><span style="color: #FF79C6">type</span><span style="color: #F8F8F2"> </span><span style="color: #8BE9FD; font-style: italic">Error</span><span style="color: #F8F8F2"> </span><span style="color: #FF79C6">=</span><span style="color: #F8F8F2"> {</span>
<span style="color: #F8F8F2">    id</span><span style="color: #FF79C6">:</span><span style="color: #F8F8F2"> </span><span style="color: #8BE9FD; font-style: italic">string</span><span style="color: #F8F8F2">;</span>
<span style="color: #F8F8F2">    reason</span><span style="color: #FF79C6">:</span><span style="color: #F8F8F2"> </span><span style="color: #8BE9FD; font-style: italic">any</span><span style="color: #F8F8F2">;</span>
<span style="color: #F8F8F2">}</span></code></div></pre>`},"Error")]),s("span",{style:{color:"#F8F8F2"}},"[]")]),s("div",{class:"line"},[s("span",{style:{color:"#F8F8F2"}},"}")])])]),s("button",{class:"markdown-it-code-copy","data-clipboard-text":`
	declare class Stringified<T> extends String {
  private ___stringified: T
}

interface JSON {
  stringify<T>(
    value: T,
    replacer?: (key: string, value: any) => any,
    space?: string | number
  ): string & Stringified<T>
  parse<T>(text: Stringified<T>, reviver?: (key: any, value: any) => any): T
  parse(text: string, reviver?: (key: any, value: any) => any): any
}

export type SQSMessageKey = \`SQSMessage$\${string}\`

export enum RecordType {
  cluster = <SINGLE-QUOTE>cluster<SINGLE-QUOTE>,
  task = <SINGLE-QUOTE>task<SINGLE-QUOTE>,
  message = <SINGLE-QUOTE>message<SINGLE-QUOTE>
}

export enum Status {
  preFlight = <SINGLE-QUOTE>PRE FLIGHT<SINGLE-QUOTE>,
  inProgress = <SINGLE-QUOTE>IN PROGRESS<SINGLE-QUOTE>,
  complete = <SINGLE-QUOTE>COMPLETE<SINGLE-QUOTE>,
  error = <SINGLE-QUOTE>ERROR<SINGLE-QUOTE>
}

export enum StatusCode {
  preFlight = 0,
  inProgress = 100,
  complete = 200,
  error = 400,
  stopped = 500
}

export type Error = {
  id: string,
  reason: any
}
// ---cut---
export type MessageRecord<Meta = any, Body = any> = {
  pKey: SQSMessageKey
  rKey: SQSMessageKey
  id: string
  url: string
  meta?: Meta
  body: String & Stringified<Body>
  type: RecordType
  startedAt: string
  status: Status
  statusCode: StatusCode
  completedAt: string | null
  updatedAt: string
  expiresAt: string
  consumtion_count: number
  error?: Error[]
}
`,style:{position:"absolute",top:"7.5px",right:"6px",cursor:"pointer",outline:"none"},title:"Copy"},[s("span",{style:{},class:"heroicon heroicon-duplicate"})])]),s("h3",{id:"the-message-record-id",tabindex:"-1"},[s("a",{class:"header-anchor",href:"#the-message-record-id","aria-hidden":"true"},"#"),s("span",{class:"emoji-wrapper"},[s("span",{class:"native-emoji"})]),s("span",{class:"emoji-wrapper"},[s("span",{class:"native-emoji"},"The Message Record "),e(" The Message Record ")]),s("em",null,[s("span",{class:"emoji-wrapper"},[s("span",{class:"native-emoji"})]),s("strong",null,[s("span",{class:"emoji-wrapper"},[s("span",{class:"native-emoji"},"id"),e(" id ")])]),s("span",{class:"emoji-wrapper"},[s("span",{class:"native-emoji"})])])]),s("p",null,[s("span",{class:"emoji-wrapper"},[s("span",{class:"native-emoji"},"This is assigned by the SQS queue when the message is sent. The "),e(" This is assigned by the SQS queue when the message is sent. The ")]),s("code",null,"pKey"),s("span",{class:"emoji-wrapper"},[s("span",{class:"native-emoji"}," is always the same as this "),e(" is always the same as this ")]),s("code",null,"id"),s("span",{class:"emoji-wrapper"},[s("span",{class:"native-emoji"}," with the prefix "),e(" with the prefix ")]),s("code",null,"SQSMessage$"),s("span",{class:"emoji-wrapper"},[s("span",{class:"native-emoji"},". The message id comes with the message everytime the poller sends a message to a lambda."),e(" . The message id comes with the message everytime the poller sends a message to a lambda. ")])]),s("h3",{id:"the-message-record-type",tabindex:"-1"},[s("a",{class:"header-anchor",href:"#the-message-record-type","aria-hidden":"true"},"#"),s("span",{class:"emoji-wrapper"},[s("span",{class:"native-emoji"})]),s("span",{class:"emoji-wrapper"},[s("span",{class:"native-emoji"},"The Message Record "),e(" The Message Record ")]),s("em",null,[s("span",{class:"emoji-wrapper"},[s("span",{class:"native-emoji"})]),s("strong",null,[s("span",{class:"emoji-wrapper"},[s("span",{class:"native-emoji"},"type"),e(" type ")])]),s("span",{class:"emoji-wrapper"},[s("span",{class:"native-emoji"})])])]),s("p",null,[s("span",{class:"emoji-wrapper"},[s("span",{class:"native-emoji"},"The type is one of three options. "),e(" The type is one of three options. ")]),s("code",null,"cluster"),s("span",{class:"emoji-wrapper"},[s("span",{class:"native-emoji"},", "),e(" , ")]),s("code",null,"task"),s("span",{class:"emoji-wrapper"},[s("span",{class:"native-emoji"},", or "),e(" , or ")]),s("code",null,"message"),s("span",{class:"emoji-wrapper"},[s("span",{class:"native-emoji"},". If the message is part of a "),e(" . If the message is part of a ")]),s("code",null,"cluster"),s("span",{class:"emoji-wrapper"},[s("span",{class:"native-emoji"}," then it is a "),e(" then it is a ")]),s("code",null,"task"),s("span",{class:"emoji-wrapper"},[s("span",{class:"native-emoji"},", but if the message is alone then it is a "),e(" , but if the message is alone then it is a ")]),s("code",null,"message"),s("span",{class:"emoji-wrapper"},[s("span",{class:"native-emoji"},"."),e(" . ")])]),s("h3",{id:"the-message-record-status-and-statuscode",tabindex:"-1"},[s("a",{class:"header-anchor",href:"#the-message-record-status-and-statuscode","aria-hidden":"true"},"#"),s("span",{class:"emoji-wrapper"},[s("span",{class:"native-emoji"})]),s("span",{class:"emoji-wrapper"},[s("span",{class:"native-emoji"},"The Message Record "),e(" The Message Record ")]),s("em",null,[s("span",{class:"emoji-wrapper"},[s("span",{class:"native-emoji"})]),s("strong",null,[s("span",{class:"emoji-wrapper"},[s("span",{class:"native-emoji"},"status"),e(" status ")])]),s("span",{class:"emoji-wrapper"},[s("span",{class:"native-emoji"})])]),s("span",{class:"emoji-wrapper"},[s("span",{class:"native-emoji"}," and "),e(" and ")]),s("em",null,[s("span",{class:"emoji-wrapper"},[s("span",{class:"native-emoji"})]),s("strong",null,[s("span",{class:"emoji-wrapper"},[s("span",{class:"native-emoji"},"statusCode"),e(" statusCode ")])]),s("span",{class:"emoji-wrapper"},[s("span",{class:"native-emoji"})])])]),s("p",null,[s("span",{class:"emoji-wrapper"},[s("span",{class:"native-emoji"},"This is the current status of the record. The status is one of four options: "),e(" This is the current status of the record. The status is one of four options: ")]),s("code",null,"PRE FLIGHT"),s("span",{class:"emoji-wrapper"},[s("span",{class:"native-emoji"},", "),e(" , ")]),s("code",null,"IN PROGRESS"),s("span",{class:"emoji-wrapper"},[s("span",{class:"native-emoji"},", "),e(" , ")]),s("code",null,"COMPLETE"),s("span",{class:"emoji-wrapper"},[s("span",{class:"native-emoji"},", or "),e(" , or ")]),s("code",null,"ERROR"),s("span",{class:"emoji-wrapper"},[s("span",{class:"native-emoji"},". The status code is the numerical value of the status."),e(" . The status code is the numerical value of the status. ")])]),s("h3",{id:"the-message-record-consumtion_count",tabindex:"-1"},[s("a",{class:"header-anchor",href:"#the-message-record-consumtion_count","aria-hidden":"true"},"#"),s("span",{class:"emoji-wrapper"},[s("span",{class:"native-emoji"})]),s("span",{class:"emoji-wrapper"},[s("span",{class:"native-emoji"},"The Message Record "),e(" The Message Record ")]),s("em",null,[s("span",{class:"emoji-wrapper"},[s("span",{class:"native-emoji"})]),s("strong",null,[s("span",{class:"emoji-wrapper"},[s("span",{class:"native-emoji"},"consumtion_count"),e(" consumtion_count ")])]),s("span",{class:"emoji-wrapper"},[s("span",{class:"native-emoji"})])])]),s("p",null,[s("span",{class:"emoji-wrapper"},[s("span",{class:"native-emoji"},"This is the number of times the message has attempted to be consumed by the lambda. This number should always be "),e(" This is the number of times the message has attempted to be consumed by the lambda. This number should always be ")]),s("code",null,"0"),s("span",{class:"emoji-wrapper"},[s("span",{class:"native-emoji"}," or "),e(" or ")]),s("code",null,"1"),s("span",{class:"emoji-wrapper"},[s("span",{class:"native-emoji"}," if there was no error is processing the message. If the message is ever errored than we will continue to increment this number until the message is complete or the "),e(" if there was no error is processing the message. If the message is ever errored than we will continue to increment this number until the message is complete or the ")]),s("code",null,"consumtion_count"),s("span",{class:"emoji-wrapper"},[s("span",{class:"native-emoji"}," reaches the "),e(" reaches the ")]),s("code",null,"maxConsumtionCount"),s("span",{class:"emoji-wrapper"},[s("span",{class:"native-emoji"}," set at the queue level."),e(" set at the queue level. ")])]),s("h3",{id:"the-message-record-error",tabindex:"-1"},[s("a",{class:"header-anchor",href:"#the-message-record-error","aria-hidden":"true"},"#"),s("span",{class:"emoji-wrapper"},[s("span",{class:"native-emoji"})]),s("span",{class:"emoji-wrapper"},[s("span",{class:"native-emoji"},"The Message Record "),e(" The Message Record ")]),s("em",null,[s("span",{class:"emoji-wrapper"},[s("span",{class:"native-emoji"})]),s("strong",null,[s("span",{class:"emoji-wrapper"},[s("span",{class:"native-emoji"},"error"),e(" error ")])]),s("span",{class:"emoji-wrapper"},[s("span",{class:"native-emoji"})])])]),s("p",null,[s("span",{class:"emoji-wrapper"},[s("span",{class:"native-emoji"},"When a message errors, we will store the error in this array with the "),e(" When a message errors, we will store the error in this array with the ")]),s("code",null,"id"),s("span",{class:"emoji-wrapper"},[s("span",{class:"native-emoji"}," of the message and the "),e(" of the message and the ")]),s("code",null,"reason"),s("span",{class:"emoji-wrapper"},[s("span",{class:"native-emoji"}," of the error."),e(" of the error. ")])]),s("h3",{id:"the-message-record-meta",tabindex:"-1"},[s("a",{class:"header-anchor",href:"#the-message-record-meta","aria-hidden":"true"},"#"),s("span",{class:"emoji-wrapper"},[s("span",{class:"native-emoji"})]),s("span",{class:"emoji-wrapper"},[s("span",{class:"native-emoji"},"The Message Record "),e(" The Message Record ")]),s("em",null,[s("span",{class:"emoji-wrapper"},[s("span",{class:"native-emoji"})]),s("strong",null,[s("span",{class:"emoji-wrapper"},[s("span",{class:"native-emoji"},"meta"),e(" meta ")])]),s("span",{class:"emoji-wrapper"},[s("span",{class:"native-emoji"})])])]),s("p",null,[s("span",{class:"emoji-wrapper"},[s("span",{class:"native-emoji"},"This is some meta data that can be used when processing the message. This can be larger than what is held in the body of the message, but accessing the meta data is "),e(" This is some meta data that can be used when processing the message. This can be larger than what is held in the body of the message, but accessing the meta data is ")]),s("em",null,[s("span",{class:"emoji-wrapper"},[s("span",{class:"native-emoji"},"slower"),e(" slower ")])]),s("span",{class:"emoji-wrapper"},[s("span",{class:"native-emoji"}," than accessing the body."),e(" than accessing the body. ")])]),s("h3",{id:"the-message-record-body",tabindex:"-1"},[s("a",{class:"header-anchor",href:"#the-message-record-body","aria-hidden":"true"},"#"),s("span",{class:"emoji-wrapper"},[s("span",{class:"native-emoji"})]),s("span",{class:"emoji-wrapper"},[s("span",{class:"native-emoji"},"The Message Record "),e(" The Message Record ")]),s("em",null,[s("span",{class:"emoji-wrapper"},[s("span",{class:"native-emoji"})]),s("strong",null,[s("span",{class:"emoji-wrapper"},[s("span",{class:"native-emoji"},"body"),e(" body ")])]),s("span",{class:"emoji-wrapper"},[s("span",{class:"native-emoji"})])])]),s("p",null,[s("span",{class:"emoji-wrapper"},[s("span",{class:"native-emoji"},"This is the body of the message. This is the data that is sent to the lambda."),e(" This is the body of the message. This is the data that is sent to the lambda. ")])]),s("h3",{id:"the-message-record-expiresat",tabindex:"-1"},[s("a",{class:"header-anchor",href:"#the-message-record-expiresat","aria-hidden":"true"},"#"),s("span",{class:"emoji-wrapper"},[s("span",{class:"native-emoji"})]),s("span",{class:"emoji-wrapper"},[s("span",{class:"native-emoji"},"The Message Record "),e(" The Message Record ")]),s("em",null,[s("span",{class:"emoji-wrapper"},[s("span",{class:"native-emoji"})]),s("strong",null,[s("span",{class:"emoji-wrapper"},[s("span",{class:"native-emoji"},"expiresAt"),e(" expiresAt ")])]),s("span",{class:"emoji-wrapper"},[s("span",{class:"native-emoji"})])])]),s("p",null,[s("span",{class:"emoji-wrapper"},[s("span",{class:"native-emoji"},"By default message records will expire after 30 days. However, if a message is completed, it will be deleted. So only errored message records will be kept."),e(" By default message records will expire after 30 days. However, if a message is completed, it will be deleted. So only errored message records will be kept. ")])]),s("h2",{id:"more-types",tabindex:"-1"},[s("a",{class:"header-anchor",href:"#more-types","aria-hidden":"true"},"#"),s("span",{class:"emoji-wrapper"},[s("span",{class:"native-emoji"})]),s("span",{class:"emoji-wrapper"},[s("span",{class:"native-emoji"},"More types"),e(" More types ")])]),s("div",{style:{position:"relative"}},[s("pre",{class:"shiki dracula twoslash lsp",style:{"background-color":"#282A36",color:"#F8F8F2"}},[s("div",{class:"language-id"},"ts"),s("code",{class:"code-container"},[s("div",{class:"line"},[s("span",{style:{color:"#FF79C6"}},"export"),s("span",{style:{color:"#F8F8F2"}}," "),s("span",{style:{color:"#FF79C6"}},"enum"),s("span",{style:{color:"#F8F8F2"}}," "),s("span",{style:{color:"#8BE9FD","font-style":"italic"}},[s("data-lsp",{lsp:`<pre class="shiki"><div class="language-id">ts</div><div class='code-container'><code><span style="color: #FF79C6">enum</span><span style="color: #F8F8F2"> </span><span style="color: #8BE9FD; font-style: italic">RecordType</span></code></div></pre>`},"RecordType")]),s("span",{style:{color:"#F8F8F2"}}," {")]),s("div",{class:"line"},[s("span",{style:{color:"#F8F8F2"}},[e("  "),s("data-lsp",{lsp:`<pre class="shiki"><div class="language-id">ts</div><div class='code-container'><code><span style="color: #F8F8F2">(enum member) RecordType.cluster </span><span style="color: #FF79C6">=</span><span style="color: #F8F8F2"> </span><span style="color: #E9F284">"</span><span style="color: #F1FA8C">cluster</span><span style="color: #E9F284">"</span></code></div></pre>`},"cluster"),e()]),s("span",{style:{color:"#FF79C6"}},"="),s("span",{style:{color:"#F8F8F2"}}," "),s("span",{style:{color:"#E9F284"}},"'"),s("span",{style:{color:"#F1FA8C"}},"cluster"),s("span",{style:{color:"#E9F284"}},"'"),s("span",{style:{color:"#F8F8F2"}},",")]),s("div",{class:"line"},[s("span",{style:{color:"#F8F8F2"}},[e("  "),s("data-lsp",{lsp:`<pre class="shiki"><div class="language-id">ts</div><div class='code-container'><code><span style="color: #F8F8F2">(enum member) RecordType.task </span><span style="color: #FF79C6">=</span><span style="color: #F8F8F2"> </span><span style="color: #E9F284">"</span><span style="color: #F1FA8C">task</span><span style="color: #E9F284">"</span></code></div></pre>`},"task"),e()]),s("span",{style:{color:"#FF79C6"}},"="),s("span",{style:{color:"#F8F8F2"}}," "),s("span",{style:{color:"#E9F284"}},"'"),s("span",{style:{color:"#F1FA8C"}},"task"),s("span",{style:{color:"#E9F284"}},"'"),s("span",{style:{color:"#F8F8F2"}},",")]),s("div",{class:"line"},[s("span",{style:{color:"#F8F8F2"}},[e("  "),s("data-lsp",{lsp:`<pre class="shiki"><div class="language-id">ts</div><div class='code-container'><code><span style="color: #F8F8F2">(enum member) RecordType.message </span><span style="color: #FF79C6">=</span><span style="color: #F8F8F2"> </span><span style="color: #E9F284">"</span><span style="color: #F1FA8C">message</span><span style="color: #E9F284">"</span></code></div></pre>`},"message"),e()]),s("span",{style:{color:"#FF79C6"}},"="),s("span",{style:{color:"#F8F8F2"}}," "),s("span",{style:{color:"#E9F284"}},"'"),s("span",{style:{color:"#F1FA8C"}},"message"),s("span",{style:{color:"#E9F284"}},"'")]),s("div",{class:"line"},[s("span",{style:{color:"#F8F8F2"}},"}")]),s("div",{class:"line"},"\xA0"),s("div",{class:"line"},[s("span",{style:{color:"#FF79C6"}},"export"),s("span",{style:{color:"#F8F8F2"}}," "),s("span",{style:{color:"#FF79C6"}},"enum"),s("span",{style:{color:"#F8F8F2"}}," "),s("span",{style:{color:"#8BE9FD","font-style":"italic"}},[s("data-lsp",{lsp:`<pre class="shiki"><div class="language-id">ts</div><div class='code-container'><code><span style="color: #FF79C6">enum</span><span style="color: #F8F8F2"> </span><span style="color: #8BE9FD; font-style: italic">Status</span></code></div></pre>`},"Status")]),s("span",{style:{color:"#F8F8F2"}}," {")]),s("div",{class:"line"},[s("span",{style:{color:"#F8F8F2"}},[e("  "),s("data-lsp",{lsp:`<pre class="shiki"><div class="language-id">ts</div><div class='code-container'><code><span style="color: #F8F8F2">(enum member) Status.preFlight </span><span style="color: #FF79C6">=</span><span style="color: #F8F8F2"> </span><span style="color: #E9F284">"</span><span style="color: #F1FA8C">PRE FLIGHT</span><span style="color: #E9F284">"</span></code></div></pre>`},"preFlight"),e()]),s("span",{style:{color:"#FF79C6"}},"="),s("span",{style:{color:"#F8F8F2"}}," "),s("span",{style:{color:"#E9F284"}},"'"),s("span",{style:{color:"#F1FA8C"}},"PRE FLIGHT"),s("span",{style:{color:"#E9F284"}},"'"),s("span",{style:{color:"#F8F8F2"}},",")]),s("div",{class:"line"},[s("span",{style:{color:"#F8F8F2"}},[e("  "),s("data-lsp",{lsp:`<pre class="shiki"><div class="language-id">ts</div><div class='code-container'><code><span style="color: #F8F8F2">(enum member) Status.inProgress </span><span style="color: #FF79C6">=</span><span style="color: #F8F8F2"> </span><span style="color: #E9F284">"</span><span style="color: #F1FA8C">IN PROGRESS</span><span style="color: #E9F284">"</span></code></div></pre>`},"inProgress"),e()]),s("span",{style:{color:"#FF79C6"}},"="),s("span",{style:{color:"#F8F8F2"}}," "),s("span",{style:{color:"#E9F284"}},"'"),s("span",{style:{color:"#F1FA8C"}},"IN PROGRESS"),s("span",{style:{color:"#E9F284"}},"'"),s("span",{style:{color:"#F8F8F2"}},",")]),s("div",{class:"line"},[s("span",{style:{color:"#F8F8F2"}},[e("  "),s("data-lsp",{lsp:`<pre class="shiki"><div class="language-id">ts</div><div class='code-container'><code><span style="color: #F8F8F2">(enum member) Status.complete </span><span style="color: #FF79C6">=</span><span style="color: #F8F8F2"> </span><span style="color: #E9F284">"</span><span style="color: #F1FA8C">COMPLETE</span><span style="color: #E9F284">"</span></code></div></pre>`},"complete"),e()]),s("span",{style:{color:"#FF79C6"}},"="),s("span",{style:{color:"#F8F8F2"}}," "),s("span",{style:{color:"#E9F284"}},"'"),s("span",{style:{color:"#F1FA8C"}},"COMPLETE"),s("span",{style:{color:"#E9F284"}},"'"),s("span",{style:{color:"#F8F8F2"}},",")]),s("div",{class:"line"},[s("span",{style:{color:"#F8F8F2"}},[e("  "),s("data-lsp",{lsp:`<pre class="shiki"><div class="language-id">ts</div><div class='code-container'><code><span style="color: #F8F8F2">(enum member) Status.error </span><span style="color: #FF79C6">=</span><span style="color: #F8F8F2"> </span><span style="color: #E9F284">"</span><span style="color: #F1FA8C">ERROR</span><span style="color: #E9F284">"</span></code></div></pre>`},"error"),e()]),s("span",{style:{color:"#FF79C6"}},"="),s("span",{style:{color:"#F8F8F2"}}," "),s("span",{style:{color:"#E9F284"}},"'"),s("span",{style:{color:"#F1FA8C"}},"ERROR"),s("span",{style:{color:"#E9F284"}},"'")]),s("div",{class:"line"},[s("span",{style:{color:"#F8F8F2"}},"}")]),s("div",{class:"line"},"\xA0"),s("div",{class:"line"},[s("span",{style:{color:"#FF79C6"}},"export"),s("span",{style:{color:"#F8F8F2"}}," "),s("span",{style:{color:"#FF79C6"}},"enum"),s("span",{style:{color:"#F8F8F2"}}," "),s("span",{style:{color:"#8BE9FD","font-style":"italic"}},[s("data-lsp",{lsp:`<pre class="shiki"><div class="language-id">ts</div><div class='code-container'><code><span style="color: #FF79C6">enum</span><span style="color: #F8F8F2"> </span><span style="color: #8BE9FD; font-style: italic">StatusCode</span></code></div></pre>`},"StatusCode")]),s("span",{style:{color:"#F8F8F2"}}," {")]),s("div",{class:"line"},[s("span",{style:{color:"#F8F8F2"}},[e("  "),s("data-lsp",{lsp:`<pre class="shiki"><div class="language-id">ts</div><div class='code-container'><code><span style="color: #F8F8F2">(enum member) StatusCode.preFlight </span><span style="color: #FF79C6">=</span><span style="color: #F8F8F2"> </span><span style="color: #BD93F9">0</span></code></div></pre>`},"preFlight"),e()]),s("span",{style:{color:"#FF79C6"}},"="),s("span",{style:{color:"#F8F8F2"}}," "),s("span",{style:{color:"#BD93F9"}},"0"),s("span",{style:{color:"#F8F8F2"}},",")]),s("div",{class:"line"},[s("span",{style:{color:"#F8F8F2"}},[e("  "),s("data-lsp",{lsp:`<pre class="shiki"><div class="language-id">ts</div><div class='code-container'><code><span style="color: #F8F8F2">(enum member) StatusCode.inProgress </span><span style="color: #FF79C6">=</span><span style="color: #F8F8F2"> </span><span style="color: #BD93F9">100</span></code></div></pre>`},"inProgress"),e()]),s("span",{style:{color:"#FF79C6"}},"="),s("span",{style:{color:"#F8F8F2"}}," "),s("span",{style:{color:"#BD93F9"}},"100"),s("span",{style:{color:"#F8F8F2"}},",")]),s("div",{class:"line"},[s("span",{style:{color:"#F8F8F2"}},[e("  "),s("data-lsp",{lsp:`<pre class="shiki"><div class="language-id">ts</div><div class='code-container'><code><span style="color: #F8F8F2">(enum member) StatusCode.complete </span><span style="color: #FF79C6">=</span><span style="color: #F8F8F2"> </span><span style="color: #BD93F9">200</span></code></div></pre>`},"complete"),e()]),s("span",{style:{color:"#FF79C6"}},"="),s("span",{style:{color:"#F8F8F2"}}," "),s("span",{style:{color:"#BD93F9"}},"200"),s("span",{style:{color:"#F8F8F2"}},",")]),s("div",{class:"line"},[s("span",{style:{color:"#F8F8F2"}},[e("  "),s("data-lsp",{lsp:`<pre class="shiki"><div class="language-id">ts</div><div class='code-container'><code><span style="color: #F8F8F2">(enum member) StatusCode.error </span><span style="color: #FF79C6">=</span><span style="color: #F8F8F2"> </span><span style="color: #BD93F9">400</span></code></div></pre>`},"error"),e()]),s("span",{style:{color:"#FF79C6"}},"="),s("span",{style:{color:"#F8F8F2"}}," "),s("span",{style:{color:"#BD93F9"}},"400"),s("span",{style:{color:"#F8F8F2"}},",")]),s("div",{class:"line"},[s("span",{style:{color:"#F8F8F2"}},[e("  "),s("data-lsp",{lsp:`<pre class="shiki"><div class="language-id">ts</div><div class='code-container'><code><span style="color: #F8F8F2">(enum member) StatusCode.stopped </span><span style="color: #FF79C6">=</span><span style="color: #F8F8F2"> </span><span style="color: #BD93F9">500</span></code></div></pre>`},"stopped"),e()]),s("span",{style:{color:"#FF79C6"}},"="),s("span",{style:{color:"#F8F8F2"}}," "),s("span",{style:{color:"#BD93F9"}},"500")]),s("div",{class:"line"},[s("span",{style:{color:"#F8F8F2"}},"}")])])]),s("button",{class:"markdown-it-code-copy","data-clipboard-text":`
	export enum RecordType {
  cluster = <SINGLE-QUOTE>cluster<SINGLE-QUOTE>,
  task = <SINGLE-QUOTE>task<SINGLE-QUOTE>,
  message = <SINGLE-QUOTE>message<SINGLE-QUOTE>
}

export enum Status {
  preFlight = <SINGLE-QUOTE>PRE FLIGHT<SINGLE-QUOTE>,
  inProgress = <SINGLE-QUOTE>IN PROGRESS<SINGLE-QUOTE>,
  complete = <SINGLE-QUOTE>COMPLETE<SINGLE-QUOTE>,
  error = <SINGLE-QUOTE>ERROR<SINGLE-QUOTE>
}

export enum StatusCode {
  preFlight = 0,
  inProgress = 100,
  complete = 200,
  error = 400,
  stopped = 500
}
`,style:{position:"absolute",top:"7.5px",right:"6px",cursor:"pointer",outline:"none"},title:"Copy"},[s("span",{style:{},class:"heroicon heroicon-duplicate"})])])],-1),v={setup(F,{expose:o}){const a={title:"Our DynamoDB Record",duration:"3 min read",content:`The Message Record
The message record that is stored for each message looks like this:
declare class Stringified extends String {
  private ___stringified: T
}

interface JSON {
  stringify(
    value: T,
    replacer?: (key: string, value: any) =&gt any,
    space?: string | number
  ): string &amp Stringified
  parse(text: Stringified, reviver?: (key: any, value: any) =&gt any): T
  parse(text: string, reviver?: (key: any, value: any) =&gt any): any
}

export type SQSMessageKey = \`SQSMessage$\${string}\`

export enum RecordType {
  cluster = &#39cluster&#39,
  task = &#39task&#39,
  message = &#39message&#39
}

export enum Status {
  preFlight = &#39PRE FLIGHT&#39,
  inProgress = &#39IN PROGRESS&#39,
  complete = &#39COMPLETE&#39,
  error = &#39ERROR&#39
}

export enum StatusCode {
  preFlight = 0,
  inProgress = 100,
  complete = 200,
  error = 400,
  stopped = 500
}

export type Error = {
  id: string,
  reason: any
}
// ---cut---
export type MessageRecord = {
  pKey: SQSMessageKey
  rKey: SQSMessageKey
  id: string
  url: string
  meta?: Meta
  body: String &amp Stringified
  type: RecordType
  startedAt: string
  status: Status
  statusCode: StatusCode
  completedAt: string | null
  updatedAt: string
  expiresAt: string
  consumtion_count: number
  error?: Error[]
}
The Message Record id
This is assigned by the SQS queue when the message is sent. The pKey is always the same as this id with the prefix SQSMessage$. The message id comes with the message everytime the poller sends a message to a lambda.
The Message Record type
The type is one of three options. cluster, task, or message. If the message is part of a cluster then it is a task, but if the message is alone then it is a message.
The Message Record status and statusCode
This is the current status of the record. The status is one of four options: PRE FLIGHT, IN PROGRESS, COMPLETE, or ERROR. The status code is the numerical value of the status.
The Message Record consumtion_count
This is the number of times the message has attempted to be consumed by the lambda. This number should always be 0 or 1 if there was no error is processing the message. If the message is ever errored than we will continue to increment this number until the message is complete or the consumtion_count reaches the maxConsumtionCount set at the queue level.
The Message Record  error
When a message errors, we will store the error in this array with the id of the message and the reason of the error.
The Message Record meta
This is some meta data that can be used when processing the message. This can be larger than what is held in the body of the message, but accessing the meta data is slower than accessing the body.
The Message Record body
This is the body of the message. This is the data that is sent to the lambda.
The Message Record expiresAt
By default message records will expire after 30 days. However, if a message is completed, it will be deleted. So only errored message records will be kept.
More types
export enum RecordType {
  cluster = &#39cluster&#39,
  task = &#39task&#39,
  message = &#39message&#39
}

export enum Status {
  preFlight = &#39PRE FLIGHT&#39,
  inProgress = &#39IN PROGRESS&#39,
  complete = &#39COMPLETE&#39,
  error = &#39ERROR&#39
}

export enum StatusCode {
  preFlight = 0,
  inProgress = 100,
  complete = 200,
  error = 400,
  stopped = 500
}
`,meta:[{property:"og:title",content:"Our DynamoDB Record"}]};return o({frontmatter:a}),t({title:"Our DynamoDB Record",meta:[{property:"og:title",content:"Our DynamoDB Record"}]}),(d,m)=>{const l=n;return p(),r(l,{frontmatter:a},{default:c(()=>[i]),_:1})}}};export{v as default};
