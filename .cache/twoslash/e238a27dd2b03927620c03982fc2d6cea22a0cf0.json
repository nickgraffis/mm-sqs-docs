{"code":"type MetaData = {\n  stuff: string\n}\n\ntype Globals = {\n  firstName: string,\n  lastName: string\n}[]\n\nasync function processMessage(record: SQSRecord) {\n  await onClusterComplete<MetaData, Globals>(\n    { pKey: 'SQSMessage$jfkdlajf', rKey: 'SQSMessage$jfkdlajf' },\n    async (record, globals) => {\n      // Perform logic when cluster is complete\n    },\n    async (record, globals) => {\n      // Perform logic when cluster is complete with errors\n    }\n  )\n}","extension":"ts","highlights":[],"queries":[],"staticQuickInfos":[{"text":"type MetaData = {\n    stuff: string;\n}","docs":"","start":5,"length":8,"line":0,"character":5,"targetString":"MetaData"},{"text":"(property) stuff: string","docs":"","start":20,"length":5,"line":1,"character":2,"targetString":"stuff"},{"text":"type Globals = {\n    firstName: string;\n    lastName: string;\n}[]","docs":"","start":42,"length":7,"line":4,"character":5,"targetString":"Globals"},{"text":"(property) firstName: string","docs":"","start":56,"length":9,"line":5,"character":2,"targetString":"firstName"},{"text":"(property) lastName: string","docs":"","start":77,"length":8,"line":6,"character":2,"targetString":"lastName"},{"text":"function processMessage(record: SQSRecord): Promise<void>","docs":"","start":114,"length":14,"line":9,"character":15,"targetString":"processMessage"},{"text":"(parameter) record: SQSRecord","docs":"","start":129,"length":6,"line":9,"character":30,"targetString":"record"},{"text":"(alias) interface SQSRecord\nimport SQSRecord","docs":"","start":137,"length":9,"line":9,"character":38,"targetString":"SQSRecord"},{"text":"function onClusterComplete<MetaData, Globals>(key: {\n    pKey: `SQSMessage$${string}`;\n    rKey: `SQSMessage$${string}`;\n}, onCompletedCallback: (record: MessageClusterRecord<MetaData, any>, globals: Globals) => Promise<...>, onErrorCallback?: ((record: MessageClusterRecord<...>, globals: Globals) => Promise<...>) | undefined): Promise<...>","docs":"","start":158,"length":17,"line":10,"character":8,"targetString":"onClusterComplete"},{"text":"type MetaData = {\n    stuff: string;\n}","docs":"","start":176,"length":8,"line":10,"character":26,"targetString":"MetaData"},{"text":"type Globals = {\n    firstName: string;\n    lastName: string;\n}[]","docs":"","start":186,"length":7,"line":10,"character":36,"targetString":"Globals"},{"text":"(property) pKey: `SQSMessage$${string}`","docs":"","start":202,"length":4,"line":11,"character":6,"targetString":"pKey"},{"text":"(property) rKey: `SQSMessage$${string}`","docs":"","start":231,"length":4,"line":11,"character":35,"targetString":"rKey"},{"text":"(parameter) record: MessageClusterRecord<MetaData, any>","docs":"","start":273,"length":6,"line":12,"character":11,"targetString":"record"},{"text":"(parameter) globals: Globals","docs":"","start":281,"length":7,"line":12,"character":19,"targetString":"globals"},{"text":"(parameter) record: MessageClusterRecord<MetaData, any>","docs":"","start":361,"length":6,"line":15,"character":11,"targetString":"record"},{"text":"(parameter) globals: Globals","docs":"","start":369,"length":7,"line":15,"character":19,"targetString":"globals"}],"errors":[],"playgroundURL":"https://www.typescriptlang.org/play/#code/JYWwDg9gTgLgBAbzgZQIrIEoFMDG0AmcAvnAGZQQhwDkAhgO4DOAtADa0gBG+t1AUKEiw4AQQDqyMhSp0mzRvgDW-PlgAeQ+DACeYLCnQBZLI0a0A5lgDSWbXAC8cAAZpkx0xawASLwkYwoYAA7cyInPj58XHYofRx2UxQA4PNgUmAsfAAeABUAPjh1GCwg-EYkwJDEPjg4MECAN1piuAB9dv9K1PTMgC44HL4iCODiqFJaHH0AKWQAeQA5atrOlLTtXLyAChrauCbWAFcsfpyAGl3a2LB2KagAfn6txVt+1ZCz-dojk7haIO0AEoHAV-toLns4IwwJMsI8ockqgAfOBBQ5cLBQXaAt6I8xwABkFTWPWy+V2MKgjCwmy2xTUMH6yDxaQyZLyn1iDWADUx8Oerz+AM+B2O-TBwPsoIBOIGFNoVKwdKKuK6nKw3N5DyeL204uFXx++qBIKFQONQwi6k0cB0ejg7jMlgAwkd-JjsHgoNljDBaA4zZ8crRGIpff7HGCCo4ELs7b9PQQcrosLtDlBWKqUhSbHqDG4TE7rLZdlBc0yjIXPLndv5modGEy-TAG7tMRRtWaANoAXVrzYbzogUSb9cYQ6i-YVxXwIkZCK6uzw4FYWBnc6zyNRh1YrCXlBua8ywdDjYGIcUuQv4byvd2wWXh+KJ8UZ5fV9DN7vtU4hxwLxgAAFBUODPWNIQAIT-ADN3MS44HLBds1qYZahANdaHhcM0zAHh13nd44Nqa1gFiRgNyQkJLVUDRoC0FMHSrSxE29LJwwDMFPgg4c7EjAFo2WOpENcR1qxLK5hMrDxLBrWpgHwWC0wzRS0IwrCMN2TgeKbLpCWJEJWUyLJuPwbQ8jjFN+hY-Bkz0KdYEyCjCKnFsz2ZMcXMHYdfnc1yJ1TWpH1XfDYLgFE0V3HC8Mcgi8TbDRSJMJy4sCiAgkYdEYGANLWjwQ4gnnNEMSxYioA7eEwTvYYaJteNz1DNiMI4-iA3AuB0L9fpsNqeN+moP1Q34OT8HhZyVgHRh4V81tqutOjCiKuBrNs-Q2viBsxgDah1vdKBqAhW0Ly2gblAO9DpP0RxqHOot+Fm2jhBKdEkjHQT6iwAAxVhgHMAALeArsAjAAFE4A+gAZABJABxAAJHJ9vvIJAIocwyPKK7IaWIG5mhkHkGQRHUpXI8tudOZDEA8HgZyYGicKMroC24GMAwOYMDuq0HvgJ6qGm8dvLe2Ivp+-6AwABgO4IUYgNHCwDABGcXJf3EmWkcAAmZWDvbJnHAAFm1-sIDAPRCEcABWZXqLm4QQ20IIcDIfKcCytK4DS10NsxIc1Zpdi+PBOBodYCBOG+DGzW2XZdX6JAwEkgsLtzABuOAy0FESmOLOwiAOz2D2CzJnW+Vhw--J5Yi9BTGIur3dusxq-Q5OBzFD8PWDPEOw4jyUChlkBgGpLIGggeSOV2NLgcZqAS93cvFH5KuCC67P67GRub0+Nue87-pu47xg+7gAeh5pUfx74YEkGqgB6W+4GYJ+cEOGAn+YPg6vDAARZoI0E-whxSCkEUtVOqB8I6tV2OkKkMAFgcF+IRA6CQ4EINAXePg9tHbO0dm7IIdQKBTFMKJSwWxl7egrJgXABBr67AYLQYA8BPZujGL7J8-sMK-z9J8CBndo6QnjohagWcLpeAAFakEUPgdgEj9rpyESIos4jJHSNoLI4gB1ahYKdmQ6h3pt7t17qaNqkJ74n0xKQaAVBQ6pCdvQX6JQ4A7U2kPJxhcjzwTzvBbRcBdHVwMbvI+xj4K1DMYBCxVi4A2OAHYhx+DnGYjgK4oKpN6CMN+gzDsjBPHYiGEAA","tags":[]}