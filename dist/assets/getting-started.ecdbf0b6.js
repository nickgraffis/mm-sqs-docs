import{_ as l}from"./Post.3c6da465.js";import{q as t,o as p,k as F,w as c,a as s,z as a}from"./vendor.09be1bf3.js";import"./app.3d6c68a9.js";const r=s("div",{class:"prose prose-sm text-left max-w-3xl mx-auto"},[s("p",null,[s("span",{class:"emoji-wrapper"},[s("span",{class:"native-emoji"},"You can send a message easily, and let the api handle most of the heavy lifting."),a(" You can send a message easily, and let the api handle most of the heavy lifting. ")])]),s("h2",{id:"tl%3Bdr",tabindex:"-1"},[s("a",{class:"header-anchor",href:"#tl%3Bdr","aria-hidden":"true"},"#"),s("span",{class:"emoji-wrapper"},[s("span",{class:"native-emoji"})]),s("span",{class:"emoji-wrapper"},[s("span",{class:"native-emoji"},"TL;DR"),a(" TL;DR ")])]),s("p",null,[s("span",{class:"emoji-wrapper"},[s("span",{class:"native-emoji"},"You can send your message to the queue by passing in the "),a(" You can send your message to the queue by passing in the ")]),s("a",{href:"https://docs.aws.amazon.com/AWSJavaScriptSDK/latest/AWS/SQS.html#sendMessage-property",target:"_blank",rel:"noopener"},[s("span",{class:"emoji-wrapper"},[s("span",{class:"native-emoji"},"aws send message request object"),a(" aws send message request object ")])]),s("span",{class:"emoji-wrapper"},[s("span",{class:"native-emoji"},". Along with a meta object that contains some information about the message and can be grabbed later on in the process from dynamo db."),a(" . Along with a meta object that contains some information about the message and can be grabbed later on in the process from dynamo db. ")])]),s("div",{style:{position:"relative"}},[s("pre",{class:"shiki dracula twoslash lsp",style:{"background-color":"#282A36",color:"#F8F8F2"}},[s("div",{class:"language-id"},"ts"),s("code",{class:"code-container"},[s("div",{class:"line"},[s("span",{style:{color:"#FF79C6"}},"async"),s("span",{style:{color:"#F8F8F2"}}," "),s("span",{style:{color:"#FF79C6"}},"function"),s("span",{style:{color:"#F8F8F2"}}," "),s("span",{style:{color:"#50FA7B"}},[s("data-lsp",{lsp:`<pre class="shiki"><div class="language-id">ts</div><div class='code-container'><code><span style="color: #FF79C6">function</span><span style="color: #F8F8F2"> </span><span style="color: #50FA7B">handler</span><span style="color: #F8F8F2">()</span><span style="color: #FF79C6">:</span><span style="color: #F8F8F2"> </span><span style="color: #8BE9FD; font-style: italic">Promise</span><span style="color: #F8F8F2">&lt;</span><span style="color: #8BE9FD; font-style: italic">void</span><span style="color: #F8F8F2">&gt;</span></code></div></pre>`},"handler")]),s("span",{style:{color:"#F8F8F2"}},"() {")]),s("div",{class:"line"},[s("span",{style:{color:"#F8F8F2"}},"  "),s("span",{style:{color:"#FF79C6"}},"const"),s("span",{style:{color:"#F8F8F2"}},[a(),s("data-lsp",{lsp:`<pre class="shiki"><div class="language-id">ts</div><div class='code-container'><code><span style="color: #FF79C6">const</span><span style="color: #F8F8F2"> key</span><span style="color: #FF79C6">:</span><span style="color: #F8F8F2"> {</span>
<span style="color: #F8F8F2">    pKey</span><span style="color: #FF79C6">:</span><span style="color: #F8F8F2"> </span><span style="color: #8BE9FD; font-style: italic">string</span><span style="color: #F8F8F2">;</span>
<span style="color: #F8F8F2">    rKey</span><span style="color: #FF79C6">:</span><span style="color: #F8F8F2"> </span><span style="color: #8BE9FD; font-style: italic">string</span><span style="color: #F8F8F2">;</span>
<span style="color: #F8F8F2">}</span></code></div></pre>`},"key"),a()]),s("span",{style:{color:"#FF79C6"}},"="),s("span",{style:{color:"#F8F8F2"}}," "),s("span",{style:{color:"#FF79C6"}},"await"),s("span",{style:{color:"#F8F8F2"}}," "),s("span",{style:{color:"#50FA7B"}},[s("data-lsp",{lsp:`<pre class="shiki"><div class="language-id">ts</div><div class='code-container'><code><span style="color: #FF79C6">function</span><span style="color: #F8F8F2"> </span><span style="color: #50FA7B">sendMessage</span><span style="color: #F8F8F2">&lt;{</span>
<span style="color: #F8F8F2">    name</span><span style="color: #FF79C6">:</span><span style="color: #F8F8F2"> </span><span style="color: #8BE9FD; font-style: italic">string</span><span style="color: #F8F8F2">;</span>
<span style="color: #F8F8F2">}, </span><span style="color: #8BE9FD; font-style: italic">any</span><span style="color: #F8F8F2">&gt;(</span><span style="color: #FFB86C; font-style: italic">messageParams</span><span style="color: #FF79C6">:</span><span style="color: #F8F8F2"> </span><span style="color: #8BE9FD; font-style: italic">SendMessageRequest</span><span style="color: #F8F8F2">, </span><span style="color: #FFB86C; font-style: italic">meta</span><span style="color: #FF79C6">?:</span><span style="color: #F8F8F2"> {</span>
<span style="color: #F8F8F2">    name</span><span style="color: #FF79C6">:</span><span style="color: #F8F8F2"> </span><span style="color: #8BE9FD; font-style: italic">string</span><span style="color: #F8F8F2">;</span>
<span style="color: #F8F8F2">} </span><span style="color: #FF79C6">|</span><span style="color: #F8F8F2"> </span><span style="color: #8BE9FD; font-style: italic">undefined</span><span style="color: #F8F8F2">)</span><span style="color: #FF79C6">:</span><span style="color: #F8F8F2"> </span><span style="color: #8BE9FD; font-style: italic">Promise</span><span style="color: #F8F8F2">&lt;{</span>
<span style="color: #F8F8F2">    pKey</span><span style="color: #FF79C6">:</span><span style="color: #F8F8F2"> </span><span style="color: #8BE9FD; font-style: italic">string</span><span style="color: #F8F8F2">;</span>
<span style="color: #F8F8F2">    rKey</span><span style="color: #FF79C6">:</span><span style="color: #F8F8F2"> </span><span style="color: #8BE9FD; font-style: italic">string</span><span style="color: #F8F8F2">;</span>
<span style="color: #F8F8F2">}&gt;</span></code></div></pre>`},"sendMessage")]),s("span",{style:{color:"#F8F8F2"}},"({")]),s("div",{class:"line"},[s("span",{style:{color:"#F8F8F2"}},[a("    "),s("data-lsp",{lsp:`<pre class="shiki"><div class="language-id">ts</div><div class='code-container'><code><span style="color: #F8F8F2">(property) </span><span style="color: #BD93F9">SQS</span><span style="color: #F8F8F2">.SendMessageRequest.QueueUrl: string</span></code></div></pre>`},"QueueUrl")]),s("span",{style:{color:"#FF79C6"}},":"),s("span",{style:{color:"#F8F8F2"}}," "),s("span",{style:{color:"#E9F284"}},'"'),s("span",{style:{color:"#F1FA8C"}},"https://sqs.us-east-1.amazonaws.com/123456789012/my-queue"),s("span",{style:{color:"#E9F284"}},'"'),s("span",{style:{color:"#F8F8F2"}},",")]),s("div",{class:"line"},[s("span",{style:{color:"#F8F8F2"}},[a("      "),s("data-lsp",{lsp:`<pre class="shiki"><div class="language-id">ts</div><div class='code-container'><code><span style="color: #F8F8F2">(property) </span><span style="color: #BD93F9">SQS</span><span style="color: #F8F8F2">.SendMessageRequest.MessageBody: string</span></code></div></pre>`},"MessageBody")]),s("span",{style:{color:"#FF79C6"}},":"),s("span",{style:{color:"#F8F8F2"}}," "),s("span",{style:{color:"#BD93F9"}},[s("data-lsp",{lsp:`<pre class="shiki"><div class="language-id">ts</div><div class='code-container'><code><span style="color: #FF79C6">var</span><span style="color: #F8F8F2"> JSON</span><span style="color: #FF79C6">:</span><span style="color: #F8F8F2"> </span><span style="color: #8BE9FD; font-style: italic">JSON</span></code></div></pre>`},"JSON")]),s("span",{style:{color:"#F8F8F2"}},"."),s("span",{style:{color:"#8BE9FD"}},[s("data-lsp",{lsp:`<pre class="shiki"><div class="language-id">ts</div><div class='code-container'><code><span style="color: #F8F8F2">(method) </span><span style="color: #BD93F9">JSON</span><span style="color: #F8F8F2">.</span><span style="color: #8BE9FD">stringify</span><span style="color: #F8F8F2">(value: any, replacer</span><span style="color: #FF79C6">?:</span><span style="color: #F8F8F2"> ((</span><span style="color: #BD93F9; font-style: italic">this</span><span style="color: #FF79C6">:</span><span style="color: #F8F8F2"> </span><span style="color: #8BE9FD; font-style: italic">any</span><span style="color: #F8F8F2">, </span><span style="color: #FFB86C; font-style: italic">key</span><span style="color: #FF79C6">:</span><span style="color: #F8F8F2"> </span><span style="color: #8BE9FD; font-style: italic">string</span><span style="color: #F8F8F2">, </span><span style="color: #FFB86C; font-style: italic">value</span><span style="color: #FF79C6">:</span><span style="color: #F8F8F2"> </span><span style="color: #8BE9FD; font-style: italic">any</span><span style="color: #F8F8F2">) </span><span style="color: #FF79C6">=&gt;</span><span style="color: #F8F8F2"> any) </span><span style="color: #FF79C6">|</span><span style="color: #F8F8F2"> </span><span style="color: #BD93F9">undefined</span><span style="color: #F8F8F2">, space</span><span style="color: #FF79C6">?:</span><span style="color: #F8F8F2"> string </span><span style="color: #FF79C6">|</span><span style="color: #F8F8F2"> number </span><span style="color: #FF79C6">|</span><span style="color: #F8F8F2"> </span><span style="color: #BD93F9">undefined</span><span style="color: #F8F8F2">): </span><span style="color: #50FA7B">string</span><span style="color: #F8F8F2"> (</span><span style="color: #FF79C6">+</span><span style="color: #BD93F9">1</span><span style="color: #F8F8F2"> overload)</span></code></div></pre>`},"stringify")]),s("span",{style:{color:"#F8F8F2"}},"({")]),s("div",{class:"line"},[s("span",{style:{color:"#F8F8F2"}},[a("        "),s("data-lsp",{lsp:`<pre class="shiki"><div class="language-id">ts</div><div class='code-container'><code><span style="color: #F8F8F2">(property) id: string</span></code></div></pre>`},"id")]),s("span",{style:{color:"#FF79C6"}},":"),s("span",{style:{color:"#F8F8F2"}}," "),s("span",{style:{color:"#E9F284"}},'"'),s("span",{style:{color:"#F1FA8C"}},"12345"),s("span",{style:{color:"#E9F284"}},'"'),s("span",{style:{color:"#F8F8F2"}},",")]),s("div",{class:"line"},[s("span",{style:{color:"#F8F8F2"}},[a("        "),s("data-lsp",{lsp:`<pre class="shiki"><div class="language-id">ts</div><div class='code-container'><code><span style="color: #F8F8F2">(property) type: string</span></code></div></pre>`},"type")]),s("span",{style:{color:"#FF79C6"}},":"),s("span",{style:{color:"#F8F8F2"}}," "),s("span",{style:{color:"#E9F284"}},'"'),s("span",{style:{color:"#F1FA8C"}},"my-message-type"),s("span",{style:{color:"#E9F284"}},'"'),s("span",{style:{color:"#F8F8F2"}},",")]),s("div",{class:"line"},[s("span",{style:{color:"#F8F8F2"}},[a("        "),s("data-lsp",{lsp:`<pre class="shiki"><div class="language-id">ts</div><div class='code-container'><code><span style="color: #F8F8F2">(property) data: {</span>
<span style="color: #F8F8F2">    foo: string;</span>
<span style="color: #F8F8F2">}</span></code></div></pre>`},"data")]),s("span",{style:{color:"#FF79C6"}},":"),s("span",{style:{color:"#F8F8F2"}}," {")]),s("div",{class:"line"},[s("span",{style:{color:"#F8F8F2"}},[a("          "),s("data-lsp",{lsp:`<pre class="shiki"><div class="language-id">ts</div><div class='code-container'><code><span style="color: #F8F8F2">(property) foo: string</span></code></div></pre>`},"foo")]),s("span",{style:{color:"#FF79C6"}},":"),s("span",{style:{color:"#F8F8F2"}}," "),s("span",{style:{color:"#E9F284"}},'"'),s("span",{style:{color:"#F1FA8C"}},"bar"),s("span",{style:{color:"#E9F284"}},'"')]),s("div",{class:"line"},[s("span",{style:{color:"#F8F8F2"}},"        }")]),s("div",{class:"line"},[s("span",{style:{color:"#F8F8F2"}},"      })")]),s("div",{class:"line"},[s("span",{style:{color:"#F8F8F2"}},"    }, {")]),s("div",{class:"line"},[s("span",{style:{color:"#F8F8F2"}},[a("      "),s("data-lsp",{lsp:`<pre class="shiki"><div class="language-id">ts</div><div class='code-container'><code><span style="color: #F8F8F2">(property) name: string</span></code></div></pre>`},"name")]),s("span",{style:{color:"#FF79C6"}},":"),s("span",{style:{color:"#F8F8F2"}}," "),s("span",{style:{color:"#E9F284"}},"'"),s("span",{style:{color:"#F1FA8C"}},"my-message-data"),s("span",{style:{color:"#E9F284"}},"'"),s("span",{style:{color:"#F8F8F2"}},",")]),s("div",{class:"line"},[s("span",{style:{color:"#F8F8F2"}},"    })")]),s("div",{class:"line"},[s("span",{style:{color:"#F8F8F2"}},"}")]),s("div",{class:"line"},"\xA0")])]),s("button",{class:"markdown-it-code-copy","data-clipboard-text":`
	import { SendMessageRequest } from <SINGLE-QUOTE>aws-sdk/clients/sqs<SINGLE-QUOTE>
export async function sendMessage<Meta = any, Body = any>(messageParams: SendMessageRequest, meta?: Meta) { 
  const pKey = <SINGLE-QUOTE>messageId<SINGLE-QUOTE>
  const rKey = <SINGLE-QUOTE>messageId<SINGLE-QUOTE>
  return { pKey, rKey }
}
// ---cut---

async function handler() {
  const key = await sendMessage({
    QueueUrl: <DOUBLE-QUOTE>https://sqs.us-east-1.amazonaws.com/123456789012/my-queue<DOUBLE-QUOTE>,
      MessageBody: JSON.stringify({
        id: <DOUBLE-QUOTE>12345<DOUBLE-QUOTE>,
        type: <DOUBLE-QUOTE>my-message-type<DOUBLE-QUOTE>,
        data: {
          foo: <DOUBLE-QUOTE>bar<DOUBLE-QUOTE>
        }
      })
    }, {
      name: <SINGLE-QUOTE>my-message-data<SINGLE-QUOTE>,
    })
}

`,style:{position:"absolute",top:"7.5px",right:"6px",cursor:"pointer",outline:"none"},title:"Copy"},[s("span",{style:{},class:"heroicon heroicon-duplicate"})])]),s("p",null,[s("span",{class:"emoji-wrapper"},[s("span",{class:"native-emoji"},"You can also, similarly, send a batch of up to ten messages at a time. The "),a(" You can also, similarly, send a batch of up to ten messages at a time. The ")]),s("a",{href:"https://docs.aws.amazon.com/AWSJavaScriptSDK/latest/AWS/SQS.html#sendMessageBatch-property",target:"_blank",rel:"noopener"},[s("span",{class:"emoji-wrapper"},[s("span",{class:"native-emoji"},"aws send message batch request object"),a(" aws send message batch request object ")])]),s("span",{class:"emoji-wrapper"},[s("span",{class:"native-emoji"}," requires an "),a(" requires an ")]),s("code",null,"Entries"),s("span",{class:"emoji-wrapper"},[s("span",{class:"native-emoji"}," array of objects that must include an "),a(" array of objects that must include an ")]),s("code",null,"Id"),s("span",{class:"emoji-wrapper"},[s("span",{class:"native-emoji"}," unquie to the batch."),a(" unquie to the batch. ")])]),s("div",{style:{position:"relative"}},[s("pre",{class:"shiki dracula twoslash lsp",style:{"background-color":"#282A36",color:"#F8F8F2"}},[s("div",{class:"language-id"},"ts"),s("code",{class:"code-container"},[s("div",{class:"line"},[s("span",{style:{color:"#FF79C6"}},"async"),s("span",{style:{color:"#F8F8F2"}}," "),s("span",{style:{color:"#FF79C6"}},"function"),s("span",{style:{color:"#F8F8F2"}}," "),s("span",{style:{color:"#50FA7B"}},[s("data-lsp",{lsp:`<pre class="shiki"><div class="language-id">ts</div><div class='code-container'><code><span style="color: #FF79C6">function</span><span style="color: #F8F8F2"> </span><span style="color: #50FA7B">handler</span><span style="color: #F8F8F2">()</span><span style="color: #FF79C6">:</span><span style="color: #F8F8F2"> </span><span style="color: #8BE9FD; font-style: italic">Promise</span><span style="color: #F8F8F2">&lt;</span><span style="color: #8BE9FD; font-style: italic">void</span><span style="color: #F8F8F2">&gt;</span></code></div></pre>`},"handler")]),s("span",{style:{color:"#F8F8F2"}},"() {")]),s("div",{class:"line"},[s("span",{style:{color:"#F8F8F2"}},"  "),s("span",{style:{color:"#FF79C6"}},"const"),s("span",{style:{color:"#F8F8F2"}},[a(),s("data-lsp",{lsp:`<pre class="shiki"><div class="language-id">ts</div><div class='code-container'><code><span style="color: #FF79C6">const</span><span style="color: #F8F8F2"> key</span><span style="color: #FF79C6">:</span><span style="color: #F8F8F2"> {</span>
<span style="color: #F8F8F2">    pKey</span><span style="color: #FF79C6">:</span><span style="color: #F8F8F2"> </span><span style="color: #8BE9FD; font-style: italic">string</span><span style="color: #F8F8F2">;</span>
<span style="color: #F8F8F2">    rKey</span><span style="color: #FF79C6">:</span><span style="color: #F8F8F2"> </span><span style="color: #8BE9FD; font-style: italic">string</span><span style="color: #F8F8F2">;</span>
<span style="color: #F8F8F2">}[]</span></code></div></pre>`},"key"),a()]),s("span",{style:{color:"#FF79C6"}},"="),s("span",{style:{color:"#F8F8F2"}}," "),s("span",{style:{color:"#FF79C6"}},"await"),s("span",{style:{color:"#F8F8F2"}}," "),s("span",{style:{color:"#50FA7B"}},[s("data-lsp",{lsp:`<pre class="shiki"><div class="language-id">ts</div><div class='code-container'><code><span style="color: #FF79C6">function</span><span style="color: #F8F8F2"> </span><span style="color: #50FA7B">sendMessageBatch</span><span style="color: #F8F8F2">&lt;{</span>
<span style="color: #F8F8F2">    name</span><span style="color: #FF79C6">:</span><span style="color: #F8F8F2"> </span><span style="color: #8BE9FD; font-style: italic">string</span><span style="color: #F8F8F2">;</span>
<span style="color: #F8F8F2">}, </span><span style="color: #8BE9FD; font-style: italic">any</span><span style="color: #F8F8F2">&gt;(</span><span style="color: #FFB86C; font-style: italic">messageParams</span><span style="color: #FF79C6">:</span><span style="color: #F8F8F2"> </span><span style="color: #8BE9FD; font-style: italic">SendMessageBatchRequest</span><span style="color: #F8F8F2">, </span><span style="color: #FFB86C; font-style: italic">meta</span><span style="color: #FF79C6">?:</span><span style="color: #F8F8F2"> {</span>
<span style="color: #F8F8F2">    name</span><span style="color: #FF79C6">:</span><span style="color: #F8F8F2"> </span><span style="color: #8BE9FD; font-style: italic">string</span><span style="color: #F8F8F2">;</span>
<span style="color: #F8F8F2">} </span><span style="color: #FF79C6">|</span><span style="color: #F8F8F2"> </span><span style="color: #8BE9FD; font-style: italic">undefined</span><span style="color: #F8F8F2">)</span><span style="color: #FF79C6">:</span><span style="color: #F8F8F2"> </span><span style="color: #8BE9FD; font-style: italic">Promise</span><span style="color: #F8F8F2">&lt;{</span>
<span style="color: #F8F8F2">    pKey</span><span style="color: #FF79C6">:</span><span style="color: #F8F8F2"> </span><span style="color: #8BE9FD; font-style: italic">string</span><span style="color: #F8F8F2">;</span>
<span style="color: #F8F8F2">    rKey</span><span style="color: #FF79C6">:</span><span style="color: #F8F8F2"> </span><span style="color: #8BE9FD; font-style: italic">string</span><span style="color: #F8F8F2">;</span>
<span style="color: #F8F8F2">}[]&gt;</span></code></div></pre>`},"sendMessageBatch")]),s("span",{style:{color:"#F8F8F2"}},"({")]),s("div",{class:"line"},[s("span",{style:{color:"#F8F8F2"}},[a("    "),s("data-lsp",{lsp:`<pre class="shiki"><div class="language-id">ts</div><div class='code-container'><code><span style="color: #F8F8F2">(property) </span><span style="color: #BD93F9">SQS</span><span style="color: #F8F8F2">.SendMessageBatchRequest.QueueUrl: string</span></code></div></pre>`},"QueueUrl")]),s("span",{style:{color:"#FF79C6"}},":"),s("span",{style:{color:"#F8F8F2"}}," "),s("span",{style:{color:"#E9F284"}},'"'),s("span",{style:{color:"#F1FA8C"}},"https://sqs.us-east-1.amazonaws.com/123456789012/my-queue"),s("span",{style:{color:"#E9F284"}},'"'),s("span",{style:{color:"#F8F8F2"}},",")]),s("div",{class:"line"},[s("span",{style:{color:"#F8F8F2"}},[a("    "),s("data-lsp",{lsp:`<pre class="shiki"><div class="language-id">ts</div><div class='code-container'><code><span style="color: #F8F8F2">(property) </span><span style="color: #BD93F9">SQS</span><span style="color: #F8F8F2">.SendMessageBatchRequest.Entries: </span><span style="color: #BD93F9">SQS</span><span style="color: #F8F8F2">.SendMessageBatchRequestEntryList</span></code></div></pre>`},"Entries")]),s("span",{style:{color:"#FF79C6"}},":"),s("span",{style:{color:"#F8F8F2"}}," [")]),s("div",{class:"line"},[s("span",{style:{color:"#F8F8F2"}},"      {")]),s("div",{class:"line"},[s("span",{style:{color:"#F8F8F2"}},[a("        "),s("data-lsp",{lsp:`<pre class="shiki"><div class="language-id">ts</div><div class='code-container'><code><span style="color: #F8F8F2">(property) </span><span style="color: #BD93F9">SQS</span><span style="color: #F8F8F2">.SendMessageBatchRequestEntry.Id: string</span></code></div></pre>`},"Id")]),s("span",{style:{color:"#FF79C6"}},":"),s("span",{style:{color:"#F8F8F2"}}," "),s("span",{style:{color:"#E9F284"}},'"'),s("span",{style:{color:"#F1FA8C"}},"1"),s("span",{style:{color:"#E9F284"}},'"'),s("span",{style:{color:"#F8F8F2"}},",")]),s("div",{class:"line"},[s("span",{style:{color:"#F8F8F2"}},[a("        "),s("data-lsp",{lsp:`<pre class="shiki"><div class="language-id">ts</div><div class='code-container'><code><span style="color: #F8F8F2">(property) </span><span style="color: #BD93F9">SQS</span><span style="color: #F8F8F2">.SendMessageBatchRequestEntry.MessageBody: string</span></code></div></pre>`},"MessageBody")]),s("span",{style:{color:"#FF79C6"}},":"),s("span",{style:{color:"#F8F8F2"}}," "),s("span",{style:{color:"#BD93F9"}},[s("data-lsp",{lsp:`<pre class="shiki"><div class="language-id">ts</div><div class='code-container'><code><span style="color: #FF79C6">var</span><span style="color: #F8F8F2"> JSON</span><span style="color: #FF79C6">:</span><span style="color: #F8F8F2"> </span><span style="color: #8BE9FD; font-style: italic">JSON</span></code></div></pre>`},"JSON")]),s("span",{style:{color:"#F8F8F2"}},"."),s("span",{style:{color:"#8BE9FD"}},[s("data-lsp",{lsp:`<pre class="shiki"><div class="language-id">ts</div><div class='code-container'><code><span style="color: #F8F8F2">(method) </span><span style="color: #BD93F9">JSON</span><span style="color: #F8F8F2">.</span><span style="color: #8BE9FD">stringify</span><span style="color: #F8F8F2">(value: any, replacer</span><span style="color: #FF79C6">?:</span><span style="color: #F8F8F2"> ((</span><span style="color: #BD93F9; font-style: italic">this</span><span style="color: #FF79C6">:</span><span style="color: #F8F8F2"> </span><span style="color: #8BE9FD; font-style: italic">any</span><span style="color: #F8F8F2">, </span><span style="color: #FFB86C; font-style: italic">key</span><span style="color: #FF79C6">:</span><span style="color: #F8F8F2"> </span><span style="color: #8BE9FD; font-style: italic">string</span><span style="color: #F8F8F2">, </span><span style="color: #FFB86C; font-style: italic">value</span><span style="color: #FF79C6">:</span><span style="color: #F8F8F2"> </span><span style="color: #8BE9FD; font-style: italic">any</span><span style="color: #F8F8F2">) </span><span style="color: #FF79C6">=&gt;</span><span style="color: #F8F8F2"> any) </span><span style="color: #FF79C6">|</span><span style="color: #F8F8F2"> </span><span style="color: #BD93F9">undefined</span><span style="color: #F8F8F2">, space</span><span style="color: #FF79C6">?:</span><span style="color: #F8F8F2"> string </span><span style="color: #FF79C6">|</span><span style="color: #F8F8F2"> number </span><span style="color: #FF79C6">|</span><span style="color: #F8F8F2"> </span><span style="color: #BD93F9">undefined</span><span style="color: #F8F8F2">): </span><span style="color: #50FA7B">string</span><span style="color: #F8F8F2"> (</span><span style="color: #FF79C6">+</span><span style="color: #BD93F9">1</span><span style="color: #F8F8F2"> overload)</span></code></div></pre>`},"stringify")]),s("span",{style:{color:"#F8F8F2"}},"({")]),s("div",{class:"line"},[s("span",{style:{color:"#F8F8F2"}},[a("        "),s("data-lsp",{lsp:`<pre class="shiki"><div class="language-id">ts</div><div class='code-container'><code><span style="color: #F8F8F2">(property) id: string</span></code></div></pre>`},"id")]),s("span",{style:{color:"#FF79C6"}},":"),s("span",{style:{color:"#F8F8F2"}}," "),s("span",{style:{color:"#E9F284"}},'"'),s("span",{style:{color:"#F1FA8C"}},"12345"),s("span",{style:{color:"#E9F284"}},'"'),s("span",{style:{color:"#F8F8F2"}},",")]),s("div",{class:"line"},[s("span",{style:{color:"#F8F8F2"}},[a("        "),s("data-lsp",{lsp:`<pre class="shiki"><div class="language-id">ts</div><div class='code-container'><code><span style="color: #F8F8F2">(property) type: string</span></code></div></pre>`},"type")]),s("span",{style:{color:"#FF79C6"}},":"),s("span",{style:{color:"#F8F8F2"}}," "),s("span",{style:{color:"#E9F284"}},'"'),s("span",{style:{color:"#F1FA8C"}},"my-message-type"),s("span",{style:{color:"#E9F284"}},'"'),s("span",{style:{color:"#F8F8F2"}},",")]),s("div",{class:"line"},[s("span",{style:{color:"#F8F8F2"}},[a("          "),s("data-lsp",{lsp:`<pre class="shiki"><div class="language-id">ts</div><div class='code-container'><code><span style="color: #F8F8F2">(property) data: {</span>
<span style="color: #F8F8F2">    foo: string;</span>
<span style="color: #F8F8F2">}</span></code></div></pre>`},"data")]),s("span",{style:{color:"#FF79C6"}},":"),s("span",{style:{color:"#F8F8F2"}}," {")]),s("div",{class:"line"},[s("span",{style:{color:"#F8F8F2"}},[a("            "),s("data-lsp",{lsp:`<pre class="shiki"><div class="language-id">ts</div><div class='code-container'><code><span style="color: #F8F8F2">(property) foo: string</span></code></div></pre>`},"foo")]),s("span",{style:{color:"#FF79C6"}},":"),s("span",{style:{color:"#F8F8F2"}}," "),s("span",{style:{color:"#E9F284"}},'"'),s("span",{style:{color:"#F1FA8C"}},"bar"),s("span",{style:{color:"#E9F284"}},'"')]),s("div",{class:"line"},[s("span",{style:{color:"#F8F8F2"}},"          }")]),s("div",{class:"line"},[s("span",{style:{color:"#F8F8F2"}},"        })")]),s("div",{class:"line"},[s("span",{style:{color:"#F8F8F2"}},"      }")]),s("div",{class:"line"},[s("span",{style:{color:"#F8F8F2"}},"    ]")]),s("div",{class:"line"},[s("span",{style:{color:"#F8F8F2"}},"    }, {")]),s("div",{class:"line"},[s("span",{style:{color:"#F8F8F2"}},[a("      "),s("data-lsp",{lsp:`<pre class="shiki"><div class="language-id">ts</div><div class='code-container'><code><span style="color: #F8F8F2">(property) name: string</span></code></div></pre>`},"name")]),s("span",{style:{color:"#FF79C6"}},":"),s("span",{style:{color:"#F8F8F2"}}," "),s("span",{style:{color:"#E9F284"}},"'"),s("span",{style:{color:"#F1FA8C"}},"my-message-data"),s("span",{style:{color:"#E9F284"}},"'"),s("span",{style:{color:"#F8F8F2"}},",")]),s("div",{class:"line"},[s("span",{style:{color:"#F8F8F2"}},"    })")]),s("div",{class:"line"},[s("span",{style:{color:"#F8F8F2"}},"}")]),s("div",{class:"line"},"\xA0")])]),s("button",{class:"markdown-it-code-copy","data-clipboard-text":`
	import { SendMessageBatchRequest } from <SINGLE-QUOTE>aws-sdk/clients/sqs<SINGLE-QUOTE>
export async function sendMessageBatch<Meta = any, Body = any>(messageParams: SendMessageBatchRequest, meta?: Meta) {
  const pKey = <SINGLE-QUOTE>messageId<SINGLE-QUOTE>
  const rKey = <SINGLE-QUOTE>messageId<SINGLE-QUOTE>
  return [{ pKey, rKey }]
}
// ---cut---

async function handler() {
  const key = await sendMessageBatch({
    QueueUrl: <DOUBLE-QUOTE>https://sqs.us-east-1.amazonaws.com/123456789012/my-queue<DOUBLE-QUOTE>,
    Entries: [
      {
        Id: <DOUBLE-QUOTE>1<DOUBLE-QUOTE>,
        MessageBody: JSON.stringify({
        id: <DOUBLE-QUOTE>12345<DOUBLE-QUOTE>,
        type: <DOUBLE-QUOTE>my-message-type<DOUBLE-QUOTE>,
          data: {
            foo: <DOUBLE-QUOTE>bar<DOUBLE-QUOTE>
          }
        })
      }
    ]
    }, {
      name: <SINGLE-QUOTE>my-message-data<SINGLE-QUOTE>,
    })
}

`,style:{position:"absolute",top:"7.5px",right:"6px",cursor:"pointer",outline:"none"},title:"Copy"},[s("span",{style:{},class:"heroicon heroicon-duplicate"})])]),s("p",null,[s("span",{class:"emoji-wrapper"},[s("span",{class:"native-emoji"},"In the background both of these functions will create a message record in dynamo db and send the message(s) to the queue through the "),a(" In the background both of these functions will create a message record in dynamo db and send the message(s) to the queue through the ")]),s("code",null,"aws-sdk"),s("span",{class:"emoji-wrapper"},[s("span",{class:"native-emoji"},". Read more about how we use the "),a(" . Read more about how we use the ")]),s("a",{href:"/sending-a-message/the-sqs-sdk"},[s("span",{class:"emoji-wrapper"},[s("span",{class:"native-emoji"},"aws-sdk"),a(" aws-sdk ")])]),s("span",{class:"emoji-wrapper"},[s("span",{class:"native-emoji"}," and how we track messages with "),a(" and how we track messages with ")]),s("a",{href:"/sending-a-message/our-dynamo-record"},[s("span",{class:"emoji-wrapper"},[s("span",{class:"native-emoji"},"dynamo db"),a(" dynamo db ")])]),s("span",{class:"emoji-wrapper"},[s("span",{class:"native-emoji"},"."),a(" . ")])]),s("h2",{id:"sending-a-message-without-creating-a-dynamodb-record",tabindex:"-1"},[s("a",{class:"header-anchor",href:"#sending-a-message-without-creating-a-dynamodb-record","aria-hidden":"true"},"#"),s("span",{class:"emoji-wrapper"},[s("span",{class:"native-emoji"})]),s("span",{class:"emoji-wrapper"},[s("span",{class:"native-emoji"},"Sending a message without creating a DynamoDB Record"),a(" Sending a message without creating a DynamoDB Record ")])]),s("p",null,[s("span",{class:"emoji-wrapper"},[s("span",{class:"native-emoji"},"In some cases you will want to send a message, or a batch of messages wihtout creating a DynamoDB record. This would be if the speed in returning to the client is extreamly important, and you don\u2019t need to be aware of the message."),a(" In some cases you will want to send a message, or a batch of messages wihtout creating a DynamoDB record. This would be if the speed in returning to the client is extreamly important, and you don\u2019t need to be aware of the message. ")])]),s("p",null,[s("span",{class:"emoji-wrapper"},[s("span",{class:"native-emoji"},"To do this, just use the "),a(" To do this, just use the ")]),s("code",null,"AWS SDK"),s("span",{class:"emoji-wrapper"},[s("span",{class:"native-emoji"}," directly."),a(" directly. ")])]),s("div",{style:{position:"relative"}},[s("pre",{class:"shiki dracula twoslash lsp",style:{"background-color":"#282A36",color:"#F8F8F2"}},[s("div",{class:"language-id"},"ts"),s("code",{class:"code-container"},[s("div",{class:"line"},[s("span",{style:{color:"#FF79C6"}},"import"),s("span",{style:{color:"#F8F8F2"}},[a(),s("data-lsp",{lsp:`<pre class="shiki"><div class="language-id">ts</div><div class='code-container'><code><span style="color: #FF79C6">import</span><span style="color: #F8F8F2"> AWS</span></code></div></pre>`},"AWS"),a()]),s("span",{style:{color:"#FF79C6"}},"from"),s("span",{style:{color:"#F8F8F2"}}," "),s("span",{style:{color:"#E9F284"}},"'"),s("span",{style:{color:"#F1FA8C"}},"aws-sdk"),s("span",{style:{color:"#E9F284"}},"'")]),s("div",{class:"line"},"\xA0"),s("div",{class:"line"},[s("span",{style:{color:"#6272A4"}},"// Send a message")]),s("div",{class:"line"},[s("span",{style:{color:"#FF79C6","font-weight":"bold"}},"new"),s("span",{style:{color:"#F8F8F2"}}," "),s("span",{style:{color:"#BD93F9"}},[s("data-lsp",{lsp:`<pre class="shiki"><div class="language-id">ts</div><div class='code-container'><code><span style="color: #FF79C6">import</span><span style="color: #F8F8F2"> AWS</span></code></div></pre>`},"AWS")]),s("span",{style:{color:"#F8F8F2"}},"."),s("span",{style:{color:"#50FA7B"}},[s("data-lsp",{lsp:`<pre class="shiki"><div class="language-id">ts</div><div class='code-container'><code><span style="color: #F8F8F2">(alias) </span><span style="color: #FF79C6; font-weight: bold">new</span><span style="color: #F8F8F2"> </span><span style="color: #50FA7B">SQS</span><span style="color: #F8F8F2">(options</span><span style="color: #FF79C6">?:</span><span style="color: #F8F8F2"> </span><span style="color: #BD93F9">AWS</span><span style="color: #F8F8F2">.</span><span style="color: #BD93F9">SQS</span><span style="color: #F8F8F2">.ClientConfiguration </span><span style="color: #FF79C6">|</span><span style="color: #F8F8F2"> </span><span style="color: #BD93F9">undefined</span><span style="color: #F8F8F2">): </span><span style="color: #BD93F9">AWS</span><span style="color: #F8F8F2">.</span><span style="color: #BD93F9">SQS</span>
<span style="color: #FF79C6">import</span><span style="color: #F8F8F2"> SQS </span><span style="color: #FF79C6">=</span><span style="color: #F8F8F2"> </span><span style="color: #FF79C6">require</span><span style="color: #F8F8F2">(</span><span style="color: #E9F284">'</span><span style="color: #F1FA8C">./sqs</span><span style="color: #E9F284">'</span><span style="color: #F8F8F2">)</span></code></div></pre>`},"SQS")]),s("span",{style:{color:"#F8F8F2"}},"()."),s("span",{style:{color:"#50FA7B"}},[s("data-lsp",{lsp:`<pre class="shiki"><div class="language-id">ts</div><div class='code-container'><code><span style="color: #F8F8F2">(method) </span><span style="color: #BD93F9">SQS</span><span style="color: #F8F8F2">.</span><span style="color: #50FA7B">sendMessage</span><span style="color: #F8F8F2">(params: SendMessageRequest, callback</span><span style="color: #FF79C6">?:</span><span style="color: #F8F8F2"> ((</span><span style="color: #FFB86C; font-style: italic">err</span><span style="color: #FF79C6">:</span><span style="color: #F8F8F2"> </span><span style="color: #8BE9FD; font-style: italic">AWS</span><span style="color: #F8F8F2">.</span><span style="color: #8BE9FD; font-style: italic">AWSError</span><span style="color: #F8F8F2">, </span><span style="color: #FFB86C; font-style: italic">data</span><span style="color: #FF79C6">:</span><span style="color: #F8F8F2"> </span><span style="color: #8BE9FD; font-style: italic">AWS</span><span style="color: #F8F8F2">.</span><span style="color: #8BE9FD; font-style: italic">SQS</span><span style="color: #F8F8F2">.</span><span style="color: #8BE9FD; font-style: italic">SendMessageResult</span><span style="color: #F8F8F2">) </span><span style="color: #FF79C6">=&gt;</span><span style="color: #F8F8F2"> </span><span style="color: #FF79C6">void</span><span style="color: #F8F8F2">) </span><span style="color: #FF79C6">|</span><span style="color: #F8F8F2"> </span><span style="color: #BD93F9">undefined</span><span style="color: #F8F8F2">): </span><span style="color: #BD93F9">AWS</span><span style="color: #F8F8F2">.</span><span style="color: #50FA7B">Request</span><span style="color: #F8F8F2">&lt;</span><span style="color: #FFB86C; font-style: italic">AWS</span><span style="color: #F8F8F2">.</span><span style="color: #FFB86C; font-style: italic">SQS</span><span style="color: #F8F8F2">.</span><span style="color: #FFB86C; font-style: italic">SendMessageResult</span><span style="color: #F8F8F2">, </span><span style="color: #FFB86C; font-style: italic">AWS</span><span style="color: #F8F8F2">.</span><span style="color: #FFB86C; font-style: italic">AWSError</span><span style="color: #F8F8F2">&gt; (</span><span style="color: #FF79C6">+</span><span style="color: #BD93F9">1</span><span style="color: #F8F8F2"> overload)</span></code></div></pre>`},"sendMessage")]),s("span",{style:{color:"#F8F8F2"}},[a("("),s("data-lsp",{lsp:`<pre class="shiki"><div class="language-id">ts</div><div class='code-container'><code><span style="color: #FF79C6">const</span><span style="color: #F8F8F2"> messageParams</span><span style="color: #FF79C6">:</span><span style="color: #F8F8F2"> </span><span style="color: #8BE9FD; font-style: italic">SendMessageRequest</span></code></div></pre>`},"messageParams"),a(").")]),s("span",{style:{color:"#50FA7B"}},[s("data-lsp",{lsp:`<pre class="shiki"><div class="language-id">ts</div><div class='code-container'><code><span style="color: #F8F8F2">(method) Request</span><span style="color: #FF79C6">&lt;</span><span style="color: #BD93F9">SQS</span><span style="color: #F8F8F2">.SendMessageResult, AWSError</span><span style="color: #FF79C6">&gt;</span><span style="color: #F8F8F2">.</span><span style="color: #50FA7B">promise</span><span style="color: #F8F8F2">(): </span><span style="color: #8BE9FD; font-style: italic">Promise</span><span style="color: #FF79C6">&lt;</span><span style="color: #F8F8F2">PromiseResult</span><span style="color: #FF79C6">&lt;</span><span style="color: #BD93F9">AWS</span><span style="color: #F8F8F2">.</span><span style="color: #BD93F9">SQS</span><span style="color: #F8F8F2">.SendMessageResult, </span><span style="color: #BD93F9">AWS</span><span style="color: #F8F8F2">.AWSError</span><span style="color: #FF79C6">&gt;&gt;</span></code></div></pre>`},"promise")]),s("span",{style:{color:"#F8F8F2"}},"()")]),s("div",{class:"line"},"\xA0"),s("div",{class:"line"},[s("span",{style:{color:"#6272A4"}},"// Send batch messages")]),s("div",{class:"line"},[s("span",{style:{color:"#FF79C6","font-weight":"bold"}},"new"),s("span",{style:{color:"#F8F8F2"}}," "),s("span",{style:{color:"#BD93F9"}},[s("data-lsp",{lsp:`<pre class="shiki"><div class="language-id">ts</div><div class='code-container'><code><span style="color: #FF79C6">import</span><span style="color: #F8F8F2"> AWS</span></code></div></pre>`},"AWS")]),s("span",{style:{color:"#F8F8F2"}},"."),s("span",{style:{color:"#50FA7B"}},[s("data-lsp",{lsp:`<pre class="shiki"><div class="language-id">ts</div><div class='code-container'><code><span style="color: #F8F8F2">(alias) </span><span style="color: #FF79C6; font-weight: bold">new</span><span style="color: #F8F8F2"> </span><span style="color: #50FA7B">SQS</span><span style="color: #F8F8F2">(options</span><span style="color: #FF79C6">?:</span><span style="color: #F8F8F2"> </span><span style="color: #BD93F9">AWS</span><span style="color: #F8F8F2">.</span><span style="color: #BD93F9">SQS</span><span style="color: #F8F8F2">.ClientConfiguration </span><span style="color: #FF79C6">|</span><span style="color: #F8F8F2"> </span><span style="color: #BD93F9">undefined</span><span style="color: #F8F8F2">): </span><span style="color: #BD93F9">AWS</span><span style="color: #F8F8F2">.</span><span style="color: #BD93F9">SQS</span>
<span style="color: #FF79C6">import</span><span style="color: #F8F8F2"> SQS </span><span style="color: #FF79C6">=</span><span style="color: #F8F8F2"> </span><span style="color: #FF79C6">require</span><span style="color: #F8F8F2">(</span><span style="color: #E9F284">'</span><span style="color: #F1FA8C">./sqs</span><span style="color: #E9F284">'</span><span style="color: #F8F8F2">)</span></code></div></pre>`},"SQS")]),s("span",{style:{color:"#F8F8F2"}},"()."),s("span",{style:{color:"#50FA7B"}},[s("data-lsp",{lsp:`<pre class="shiki"><div class="language-id">ts</div><div class='code-container'><code><span style="color: #F8F8F2">(method) </span><span style="color: #BD93F9">SQS</span><span style="color: #F8F8F2">.</span><span style="color: #50FA7B">sendMessageBatch</span><span style="color: #F8F8F2">(params: SendMessageBatchRequest, callback</span><span style="color: #FF79C6">?:</span><span style="color: #F8F8F2"> ((</span><span style="color: #FFB86C; font-style: italic">err</span><span style="color: #FF79C6">:</span><span style="color: #F8F8F2"> </span><span style="color: #8BE9FD; font-style: italic">AWS</span><span style="color: #F8F8F2">.</span><span style="color: #8BE9FD; font-style: italic">AWSError</span><span style="color: #F8F8F2">, </span><span style="color: #FFB86C; font-style: italic">data</span><span style="color: #FF79C6">:</span><span style="color: #F8F8F2"> </span><span style="color: #8BE9FD; font-style: italic">AWS</span><span style="color: #F8F8F2">.</span><span style="color: #8BE9FD; font-style: italic">SQS</span><span style="color: #F8F8F2">.</span><span style="color: #8BE9FD; font-style: italic">SendMessageBatchResult</span><span style="color: #F8F8F2">) </span><span style="color: #FF79C6">=&gt;</span><span style="color: #F8F8F2"> </span><span style="color: #FF79C6">void</span><span style="color: #F8F8F2">) </span><span style="color: #FF79C6">|</span><span style="color: #F8F8F2"> </span><span style="color: #BD93F9">undefined</span><span style="color: #F8F8F2">): </span><span style="color: #BD93F9">AWS</span><span style="color: #F8F8F2">.</span><span style="color: #50FA7B">Request</span><span style="color: #F8F8F2">&lt;</span><span style="color: #FFB86C; font-style: italic">AWS</span><span style="color: #F8F8F2">.</span><span style="color: #FFB86C; font-style: italic">SQS</span><span style="color: #F8F8F2">.</span><span style="color: #FFB86C; font-style: italic">SendMessageBatchResult</span><span style="color: #F8F8F2">, </span><span style="color: #FFB86C; font-style: italic">AWS</span><span style="color: #F8F8F2">.</span><span style="color: #FFB86C; font-style: italic">AWSError</span><span style="color: #F8F8F2">&gt; (</span><span style="color: #FF79C6">+</span><span style="color: #BD93F9">1</span><span style="color: #F8F8F2"> overload)</span></code></div></pre>`},"sendMessageBatch")]),s("span",{style:{color:"#F8F8F2"}},[a("("),s("data-lsp",{lsp:`<pre class="shiki"><div class="language-id">ts</div><div class='code-container'><code><span style="color: #FF79C6">const</span><span style="color: #F8F8F2"> batchMessageParams</span><span style="color: #FF79C6">:</span><span style="color: #F8F8F2"> </span><span style="color: #8BE9FD; font-style: italic">SendMessageBatchRequest</span></code></div></pre>`},"batchMessageParams"),a(").")]),s("span",{style:{color:"#50FA7B"}},[s("data-lsp",{lsp:`<pre class="shiki"><div class="language-id">ts</div><div class='code-container'><code><span style="color: #F8F8F2">(method) Request</span><span style="color: #FF79C6">&lt;</span><span style="color: #BD93F9">SQS</span><span style="color: #F8F8F2">.SendMessageBatchResult, AWSError</span><span style="color: #FF79C6">&gt;</span><span style="color: #F8F8F2">.</span><span style="color: #50FA7B">promise</span><span style="color: #F8F8F2">(): </span><span style="color: #8BE9FD; font-style: italic">Promise</span><span style="color: #FF79C6">&lt;</span><span style="color: #F8F8F2">PromiseResult</span><span style="color: #FF79C6">&lt;</span><span style="color: #BD93F9">AWS</span><span style="color: #F8F8F2">.</span><span style="color: #BD93F9">SQS</span><span style="color: #F8F8F2">.SendMessageBatchResult, </span><span style="color: #BD93F9">AWS</span><span style="color: #F8F8F2">.AWSError</span><span style="color: #FF79C6">&gt;&gt;</span></code></div></pre>`},"promise")]),s("span",{style:{color:"#F8F8F2"}},"()")])])]),s("button",{class:"markdown-it-code-copy","data-clipboard-text":`
	// @errors: 2769
import { SendMessageRequest, SendMessageBatchRequest } from <SINGLE-QUOTE>aws-sdk/clients/sqs<SINGLE-QUOTE>

const messageParams: SendMessageRequest = {
  QueueUrl: <DOUBLE-QUOTE>https://sqs.us-east-1.amazonaws.com/123456789012/my-queue<DOUBLE-QUOTE>,
  MessageBody: JSON.stringify({
    id: <DOUBLE-QUOTE>12345<DOUBLE-QUOTE>,
    type: <DOUBLE-QUOTE>my-message-type<DOUBLE-QUOTE>,
    data: {
      foo: <DOUBLE-QUOTE>bar<DOUBLE-QUOTE>
    }
  })
}

const batchMessageParams: SendMessageBatchRequest = {
  QueueUrl: <DOUBLE-QUOTE>https://sqs.us-east-1.amazonaws.com/123456789012/my-queue<DOUBLE-QUOTE>,
  Entries: [
    {
      Id: <SINGLE-QUOTE>jfkdl<SINGLE-QUOTE>,
      MessageBody: JSON.stringify({
        id: <DOUBLE-QUOTE>12345<DOUBLE-QUOTE>,
        type: <DOUBLE-QUOTE>my-message-type<DOUBLE-QUOTE>,
        data: {
          foo: <DOUBLE-QUOTE>bar<DOUBLE-QUOTE>
        }
      })
    }
  ]
}
// ---cut---
import AWS from <SINGLE-QUOTE>aws-sdk<SINGLE-QUOTE>

// Send a message
new AWS.SQS().sendMessage(messageParams).promise()

// Send batch messages
new AWS.SQS().sendMessageBatch(batchMessageParams).promise()
`,style:{position:"absolute",top:"7.5px",right:"6px",cursor:"pointer",outline:"none"},title:"Copy"},[s("span",{style:{},class:"heroicon heroicon-duplicate"})])])],-1),v={setup(i,{expose:n}){const e={title:"Getting Started",duration:"3 min read",content:`You can send a message easily, and let the api handle most of the heavy lifting. 
TL;DR
You can send your message to the queue by passing in the aws send message request object. Along with a meta object that contains some information about the message and can be grabbed later on in the process from dynamo db.
import { SendMessageRequest } from &#39aws-sdk/clients/sqs&#39
export async function sendMessage(messageParams: SendMessageRequest, meta?: Meta) { 
  const pKey = &#39messageId&#39
  const rKey = &#39messageId&#39
  return { pKey, rKey }
}
// ---cut---

async function handler() {
  const key = await sendMessage({
    QueueUrl: &quothttps://sqs.us-east-1.amazonaws.com/123456789012/my-queue&quot,
      MessageBody: JSON.stringify({
        id: &quot12345&quot,
        type: &quotmy-message-type&quot,
        data: {
          foo: &quotbar&quot
        }
      })
    }, {
      name: &#39my-message-data&#39,
    })
}

You can also, similarly, send a batch of up to ten messages at a time. The aws send message batch request object requires an Entries array of objects that must include an Id unquie to the batch.
import { SendMessageBatchRequest } from &#39aws-sdk/clients/sqs&#39
export async function sendMessageBatch(messageParams: SendMessageBatchRequest, meta?: Meta) {
  const pKey = &#39messageId&#39
  const rKey = &#39messageId&#39
  return [{ pKey, rKey }]
}
// ---cut---

async function handler() {
  const key = await sendMessageBatch({
    QueueUrl: &quothttps://sqs.us-east-1.amazonaws.com/123456789012/my-queue&quot,
    Entries: [
      {
        Id: &quot1&quot,
        MessageBody: JSON.stringify({
        id: &quot12345&quot,
        type: &quotmy-message-type&quot,
          data: {
            foo: &quotbar&quot
          }
        })
      }
    ]
    }, {
      name: &#39my-message-data&#39,
    })
}

In the background both of these functions will create a message record in dynamo db and send the message(s) to the queue through the aws-sdk. Read more about how we use the aws-sdk and how we track messages with dynamo db.
Sending a message without creating a DynamoDB Record
In some cases you will want to send a message, or a batch of messages wihtout creating a DynamoDB record. This would be if the speed in returning to the client is extreamly important, and you don&amp#39;t need to be aware of the message.
To do this, just use the AWS SDK directly.
// @errors: 2769
import { SendMessageRequest, SendMessageBatchRequest } from &#39aws-sdk/clients/sqs&#39

const messageParams: SendMessageRequest = {
  QueueUrl: &quothttps://sqs.us-east-1.amazonaws.com/123456789012/my-queue&quot,
  MessageBody: JSON.stringify({
    id: &quot12345&quot,
    type: &quotmy-message-type&quot,
    data: {
      foo: &quotbar&quot
    }
  })
}

const batchMessageParams: SendMessageBatchRequest = {
  QueueUrl: &quothttps://sqs.us-east-1.amazonaws.com/123456789012/my-queue&quot,
  Entries: [
    {
      Id: &#39jfkdl&#39,
      MessageBody: JSON.stringify({
        id: &quot12345&quot,
        type: &quotmy-message-type&quot,
        data: {
          foo: &quotbar&quot
        }
      })
    }
  ]
}
// ---cut---
import AWS from &#39aws-sdk&#39

// Send a message
new AWS.SQS().sendMessage(messageParams).promise()

// Send batch messages
new AWS.SQS().sendMessageBatch(batchMessageParams).promise()
`,meta:[{property:"og:title",content:"Getting Started"}]};return n({frontmatter:e}),t({title:"Getting Started",meta:[{property:"og:title",content:"Getting Started"}]}),(d,g)=>{const o=l;return p(),F(o,{frontmatter:e},{default:c(()=>[r]),_:1})}}};export{v as default};
