{"code":"\ntype Body = {\n  data: string,\n  moreData: number\n}\n\ntype MetaData = {\n  stuff: string\n}\n\nasync function processMessage(record: SQSRecord) {\n  const { id, body, url, getMessageRecord } = \n    readSQSRecord<Body, MetaData>(record)\n  \n  await updateMessageRecord(\n    { pKey: `SQSMessage$${id}`, rKey: `SQSMessage$${url}` }, \n    (oldRecord) => {\n      return {\n        ...oldRecord,\n        meta: {\n          stuff: 'new stuff'\n        }\n      }\n    }\n  )\n}","extension":"ts","highlights":[],"queries":[],"staticQuickInfos":[{"text":"type Body = {\n    data: string;\n    moreData: number;\n}","docs":"","start":6,"length":4,"line":1,"character":5,"targetString":"Body"},{"text":"(property) data: string","docs":"","start":17,"length":4,"line":2,"character":2,"targetString":"data"},{"text":"(property) moreData: number","docs":"","start":33,"length":8,"line":3,"character":2,"targetString":"moreData"},{"text":"type MetaData = {\n    stuff: string;\n}","docs":"","start":58,"length":8,"line":6,"character":5,"targetString":"MetaData"},{"text":"(property) stuff: string","docs":"","start":73,"length":5,"line":7,"character":2,"targetString":"stuff"},{"text":"function processMessage(record: SQSRecord): Promise<void>","docs":"","start":105,"length":14,"line":10,"character":15,"targetString":"processMessage"},{"text":"(parameter) record: SQSRecord","docs":"","start":120,"length":6,"line":10,"character":30,"targetString":"record"},{"text":"(alias) interface SQSRecord\nimport SQSRecord","docs":"","start":128,"length":9,"line":10,"character":38,"targetString":"SQSRecord"},{"text":"const id: string | undefined","docs":"","start":151,"length":2,"line":11,"character":10,"targetString":"id"},{"text":"const body: Body","docs":"","start":155,"length":4,"line":11,"character":14,"targetString":"body"},{"text":"const url: string","docs":"","start":161,"length":3,"line":11,"character":20,"targetString":"url"},{"text":"const getMessageRecord: (consistentRead?: boolean | undefined) => Promise<MessageRecord<MetaData, any>>","docs":"","start":166,"length":16,"line":11,"character":25,"targetString":"getMessageRecord"},{"text":"function readSQSRecord<Body, MetaData, any>(record: SQSRecord): Response<MetaData, any, Body>","docs":"Parse the SQS record to gain access to helpful meta data and getters","start":192,"length":13,"line":12,"character":4,"targetString":"readSQSRecord"},{"text":"type Body = {\n    data: string;\n    moreData: number;\n}","docs":"","start":206,"length":4,"line":12,"character":18,"targetString":"Body"},{"text":"type MetaData = {\n    stuff: string;\n}","docs":"","start":212,"length":8,"line":12,"character":24,"targetString":"MetaData"},{"text":"(parameter) record: SQSRecord","docs":"","start":222,"length":6,"line":12,"character":34,"targetString":"record"},{"text":"function updateMessageRecord<any>(key: {\n    pKey: string;\n    rKey: string;\n}, record: MessageRecord<any, any> | ((record: MessageRecord<any, any>) => MessageRecord<any, any>)): Promise<...>","docs":"","start":241,"length":19,"line":14,"character":8,"targetString":"updateMessageRecord"},{"text":"(property) pKey: string","docs":"","start":268,"length":4,"line":15,"character":6,"targetString":"pKey"},{"text":"const id: string | undefined","docs":"","start":288,"length":2,"line":15,"character":26,"targetString":"id"},{"text":"(property) rKey: string","docs":"","start":294,"length":4,"line":15,"character":32,"targetString":"rKey"},{"text":"const url: string","docs":"","start":314,"length":3,"line":15,"character":52,"targetString":"url"},{"text":"(parameter) oldRecord: MessageRecord<any, any>","docs":"","start":329,"length":9,"line":16,"character":5,"targetString":"oldRecord"},{"text":"(parameter) oldRecord: MessageRecord<any, any>","docs":"","start":371,"length":9,"line":18,"character":11,"targetString":"oldRecord"},{"text":"(property) meta?: any","docs":"","start":390,"length":4,"line":19,"character":8,"targetString":"meta"},{"text":"(property) stuff: string","docs":"","start":408,"length":5,"line":20,"character":10,"targetString":"stuff"}],"errors":[],"playgroundURL":"https://www.typescriptlang.org/play/#code/KYDwDg9gTgLgBDAnmYcDKBFNBZYBnPAQwHNgBpYROAXjgANMd8jSASVgbzxigEsA7YgF86AKFEATYAGMANoSio5hAuh4DivAGa9gEgDwAVAHxxQMYPwl41fQXA6i4cMHwBuhC3AD6v7nc0dPQAuOENRIXEBCygtQmlUACk0AHkAOQcnOH8NbUQjYwAKLOcPWQBXYFDDABoSuEUweQSoAH5QwoBrSlCcwRq4MsrQwn5EAEoaU1HEOudnPDB44Hbs9XsAHzh+coBbACNgKCzx3vXiOAAyW1yggxMspag8YALCixAYULRz7V174wDRRuXhuI6rLo9OAzAZDKrQsaTajTRHVR4KF7vcxnAJA4AgsFtDrdRAjMawwgVeEzJEoiZkxARcSgSCwMw7XZwABKMmgEkMyFQjmccnK3CONDgAHJReKoFK5ggVJ1JVKYMqFVldswSKhaFLtQRdVKmaIWdB4JY9mpPGLMs5XMAAGKyXjEAAW8H1AAUuQBROBOgAyAEkAOIACUMmucAm9UAgxEUqn1IYyvpSYf9aDQMbg0gguyawC8+oAwilsN6g37DH680cE1BVX6uVyUlyTZEzeALezrT9bXgyxApPaXIoXW7PZKAAyKuMJpPMSUARln86yBaLshLergACYN4rG9BJQAWY9ZbgQMAoCSSgCsG9N5rZSBQcFwRtIPILUAMXB1UlGE4AAIVHKhaBmUxaGFFwKFJdAsG-FhyEoLIoEQ74UJ1UhEKyXgJBxDQsnKKBZBIwQtRLQhViAwgsn2SDvnOK4bkEP49H0CCJEQYwsg-eE-z5AUUGvdVYD0ABBL41gCCSh1YodFJgMURykZS1OHUdgC3QtiwsCRZKoi4th2WRZDIsAJE8GS5L6YgshZXhkxM+TSJFCB+DwPYYF4bzvALcp+DkjlDmOZxTyJBFEAAbQAXSZXgiz7DhkLQESALgIQ4C0BNOSlQgAHc8AAWnkA5bJNN94BURB+GkPKQukfzvLgcobLs1DdSywDaJAsYiiyElQnSsBsI8wQAG4GkmxycsVRR-2Ir88OAPr9AY0wtkKQplr5UIet-XkAK22jjFpNafw207+vVS66lOOB40LXgXn0cb5vOWasKhBahFMdLFDUqB+AcBCoSlBU5qhqUcpy8RRCE7l8EgHzXgYwbZjgMNZAgfZKRsaDyXAyDsdg8dyMoqanIdSbGGO9DGWcP6kMZ9aCOcdU8E6VZHMIiR+fOJiWLJvjBMFUI+rEvTnFIGAmb6joCx896LFCnlCCF0JmIgXdRiu17dnezH1s27aBO7AB6AAqW2nFtl6MVQGB3VQRgGjuhAIDgYhCAEaFpASVQYF993ZDALRylkOBtWA2zgNGB8FZiPBHbgAABJ5CE5fFLHgMqwndjKvZWn2XBdjPM5B8ifOL1BCbwXgmvjwg4ET9utDPN3UENNCERTks07ys9iHxwnZBsZOy75R3rdEaPGra8HFG1xhNt4qDYoGLGSZxvGCaJin9runDMru56eUWbyPoYgZD8nvABi3oH9J8+BmL4hlJWSdIADoniYgOgBf+X8Jjv24B1CiqoABWWhOgSHkNNLQJovIf0htvBguECBoXYBwKUWgJBEMICQqUIhoQ2A5jdLm+Zb7wCInAhBSDSGwMQZSaaaC6EYLZpKbBTBcG6nwVKeBiDkFaDYdVChKgMpM1oarKBPMVS0BClIHQ-A9CQPgCjWgMtBT-37rqOAGwth6JQP-WUMRMIljruOZw1NFT00oI42Gsx6hKJceAlxQkXFEVCCAiQBj1ohgkC4hWSsz5wEKAo9WlgtYPloHEKewBaT1GcIUeqjU4DnQeoUK6hR4LzHmBNZxaT5hsxcUUoilT5gOLKc4NuutIJBPVDU5w4Cml8TAZBNpCBBS9O4AoIy7lwH-0GVJYyMABnqm0p0xAYyZlimmUODS8JRmDO0qs3p25DL2TmRYgyu5hlTPqR1Lqxz9mdUTvZXpLk3JyVGXc-Asltm3z8gFfgQUIAhQec0hR7zArBVCrcqATZ9nRTKUIcY4w8mKkiDba2cAyrIukOUGAyKyriBRlvSU8FO6mUVLsaAwAAAinhCChHCkcU0KMGJkuAnBCS5QtBaFMqaTJTUl6tQ+ROCAIc8BM1Pitc+fVJjwQUfAdK1S4BeOgbIAY4Tzbe1yrQeoa8JAbzujxHpa11T0sIEUAJ4wshZBKgHeAVzupKpWsUIpX0oT8KZvgoiIggSTUdetfB1MKFCAGPUQo+sJCiqmHY8pNiwahqKf-aNga+q9MaZGopaxmWsulBo4qyaWVcKTYjHNkQin5rgMaoQQA","tags":[]}