{"code":"type Response<Body = any, Meta = any, Globals = any> = {\n  url: string\n  pKey: SQSMessageKey\n  rKey: SQSMessageKey\n  task?: string\n  id?: string\n  body: Body\n  type: RecordType\n  getMessageRecord: (consistentRead: boolean) => Promise<MessageRecord<Meta>>,\n  getMessageCluster?: \n    (consistentRead: boolean) => Promise<{ \n      record: MessageClusterRecord<Meta>,\n      getGlobals: () => Promise<Globals> \n    }>\n}","extension":"ts","highlights":[],"queries":[],"staticQuickInfos":[{"text":"type Response<Body = any, Meta = any, Globals = any> = {\n    url: string;\n    pKey: SQSMessageKey;\n    rKey: SQSMessageKey;\n    task?: string | undefined;\n    id?: string | undefined;\n    body: Body;\n    type: RecordType;\n    getMessageRecord: (consistentRead: boolean) => Promise<MessageRecord<Meta, any>>;\n    getMessageCluster?: ((consistentRead: boolean) => Promise<...>) | undefined;\n}","docs":"","start":5,"length":8,"line":0,"character":5,"targetString":"Response"},{"text":"(type parameter) Body in type Response<Body = any, Meta = any, Globals = any>","docs":"","start":14,"length":4,"line":0,"character":14,"targetString":"Body"},{"text":"(type parameter) Meta in type Response<Body = any, Meta = any, Globals = any>","docs":"","start":26,"length":4,"line":0,"character":26,"targetString":"Meta"},{"text":"(type parameter) Globals in type Response<Body = any, Meta = any, Globals = any>","docs":"","start":38,"length":7,"line":0,"character":38,"targetString":"Globals"},{"text":"(property) url: string","docs":"","start":59,"length":3,"line":1,"character":2,"targetString":"url"},{"text":"(property) pKey: `SQSMessage$${string}`","docs":"","start":73,"length":4,"line":2,"character":2,"targetString":"pKey"},{"text":"type SQSMessageKey = `SQSMessage$${string}`","docs":"","start":79,"length":13,"line":2,"character":8,"targetString":"SQSMessageKey"},{"text":"(property) rKey: `SQSMessage$${string}`","docs":"","start":95,"length":4,"line":3,"character":2,"targetString":"rKey"},{"text":"type SQSMessageKey = `SQSMessage$${string}`","docs":"","start":101,"length":13,"line":3,"character":8,"targetString":"SQSMessageKey"},{"text":"(property) task?: string | undefined","docs":"","start":117,"length":4,"line":4,"character":2,"targetString":"task"},{"text":"(property) id?: string | undefined","docs":"","start":133,"length":2,"line":5,"character":2,"targetString":"id"},{"text":"(property) body: Body = any","docs":"","start":147,"length":4,"line":6,"character":2,"targetString":"body"},{"text":"(type parameter) Body in type Response<Body = any, Meta = any, Globals = any>","docs":"","start":153,"length":4,"line":6,"character":8,"targetString":"Body"},{"text":"(property) type: RecordType","docs":"","start":160,"length":4,"line":7,"character":2,"targetString":"type"},{"text":"enum RecordType","docs":"","start":166,"length":10,"line":7,"character":8,"targetString":"RecordType"},{"text":"(property) getMessageRecord: (consistentRead: boolean) => Promise<MessageRecord<Meta, any>>","docs":"","start":179,"length":16,"line":8,"character":2,"targetString":"getMessageRecord"},{"text":"(parameter) consistentRead: boolean","docs":"","start":198,"length":14,"line":8,"character":21,"targetString":"consistentRead"},{"text":"interface Promise<T>","docs":"Represents the completion of an asynchronous operation","start":226,"length":7,"line":8,"character":49,"targetString":"Promise"},{"text":"type MessageRecord<Meta = any, Body = any> = {\n    pKey: SQSMessageKey;\n    rKey: SQSMessageKey;\n    id: string;\n    url: string;\n    meta?: Meta | undefined;\n    body: String & Stringified<Body>;\n    type: RecordType;\n    startedAt: string;\n    status: Status;\n    statusCode: StatusCode;\n    completedAt: string | null;\n    updatedAt: string;\n    expiresAt: string;\n    consumtion_count: number;\n    error?: any[] | undefined;\n}","docs":"","start":234,"length":13,"line":8,"character":57,"targetString":"MessageRecord"},{"text":"(type parameter) Meta in type Response<Body = any, Meta = any, Globals = any>","docs":"","start":248,"length":4,"line":8,"character":71,"targetString":"Meta"},{"text":"(property) getMessageCluster?: ((consistentRead: boolean) => Promise<{\n    record: MessageClusterRecord<Meta, any>;\n    getGlobals: () => Promise<Globals>;\n}>) | undefined","docs":"","start":258,"length":17,"line":9,"character":2,"targetString":"getMessageCluster"},{"text":"(parameter) consistentRead: boolean","docs":"","start":284,"length":14,"line":10,"character":5,"targetString":"consistentRead"},{"text":"interface Promise<T>","docs":"Represents the completion of an asynchronous operation","start":312,"length":7,"line":10,"character":33,"targetString":"Promise"},{"text":"(property) record: MessageClusterRecord<Meta, any>","docs":"","start":329,"length":6,"line":11,"character":6,"targetString":"record"},{"text":"type MessageClusterRecord<Meta = any, TaskMeta = any> = {\n    type: RecordType;\n    url: string;\n    pKey: SQSMessageKey;\n    rKey: SQSMessageKey;\n    status: Status;\n    error?: any[] | undefined;\n    statusCode: StatusCode;\n    startedAt: string;\n    completedAt: string | null;\n    completedTasks: Task<TaskMeta>[];\n    incompleteTasks: Task<TaskMeta>[];\n    bucketParams: {\n        Bucket: string;\n        Key: string;\n    };\n    meta?: Meta | undefined;\n    updatedAt: string;\n    expiresAt: string;\n}","docs":"","start":337,"length":20,"line":11,"character":14,"targetString":"MessageClusterRecord"},{"text":"(type parameter) Meta in type Response<Body = any, Meta = any, Globals = any>","docs":"","start":358,"length":4,"line":11,"character":35,"targetString":"Meta"},{"text":"(property) getGlobals: () => Promise<Globals>","docs":"","start":371,"length":10,"line":12,"character":6,"targetString":"getGlobals"},{"text":"interface Promise<T>","docs":"Represents the completion of an asynchronous operation","start":389,"length":7,"line":12,"character":24,"targetString":"Promise"},{"text":"(type parameter) Globals in type Response<Body = any, Meta = any, Globals = any>","docs":"","start":397,"length":7,"line":12,"character":32,"targetString":"Globals"}],"errors":[],"playgroundURL":"https://www.typescriptlang.org/play/#code/KYDwDg9gTgLgBDAnmYcDKBFNBZYBnPAQwHNgBpYROAXjgANMd8jSASVgbzxigEsA7YgF86AKFEATYAGMANoSio5hAuh4DivAGa9gEgDwAVAHxxQMYPwl41fQXA6i4cMHwBuhC3AD6v7nc0dPQAuOENRIXEBCygtQmlUACk0AHkAOQcnOH8NbUQjYwAKLOcPWQBXYFDDABoSuEUweQSoAH5QwoBrSlCcwRq4MsrQwn5EAEoaU1HEOudnPDB44Hbs9XsAHzh+coBbACNgKCzx3vXiOAAyW1yggxMspag8YALCixAYULRz7V174wDRRuXhuI6rLo9OAzAZDKrQsaTajTRHVR4KF7vcxnAJA4AgsFtDrdRAjMawwgVeEzJEoiZkxARcSgSCwBDIVC4AgkYAAYQq3COACUZNADLgYIQaAjZmEVJ0JVLaDNTLRHM4kChQiLpGLDBysuUoLIcRpHhRSegsFyWORKFkoBbvtbmDyLVluJ5ynhvpKYN6skcoNBVjMANoAXQ9fu9vIgUl9Xrwcak0YUFgkAEEvmsAlldbsmsAM9nTZttuVZLJ8xBC7Ji3pDPKfXK8J0jPLFcZI1kBAWixYm22W0P26Ouz3nPtytJujAAAoKQi7Fvq+YAIRnc7LxHqTtzZuckWcu2LhFWisNYAknj0pYPgkD4F4ijw976u8iohZ0Hgms5rqkDqYr6Iq0ownA67xlQypjKqmTOGA+6MDabr2s4jpQihgF2oyzi8BIO6GsaREnmeF5nlk+zQb6ARXDcgh-Ho+hQRIiDGFk-7aqKUASPqKBprAd45h+ab+i2PxJmJsbxvCkniSmwA1nWDZZiJ5xwFsOxVleN4lupebOCyL74O+5w1vweB7DAvAQPw3i6uU-A5jsBxHIGUDBkSMo9l+P5sv+rbtmBsHsdKa6npKoSXhqHKhAA5JKbbxb2EirKJCwxngqzyQGfngL+ZiuXAwG8fxqBrnI3oxNK8VVYKUDxXMCDyrVSWdE1WSntypC1d1topflrLwJYexqEmCEuIoABisi8MQAAW8C0PF85CgAonA00ADIAJIAOIABKGJ1+H8POwbEK+NgrbtGRrSk+0bWgaCnXA-b1l4K28ik2Dztt62GOtb1BtAtXrUKQopEKg3MgVbKjbs40KbJk2uMAs3zUt0oAAzNQIF0QFdzDSgAjDjePKQOqC0AATBTzWg1A0oACwM9GEBgCgEjSgArBTTIAPSC3AAC04vSOUMDi6LoiBSKix2S8LHQeB5JwCFMoDPtsgQPslI3TK8FrkaJoPruiHIS6PW4Q6VtMDb7oavK6XmfhaWkXA1FsaErF4eyWolTxfEGs4pAwKhQHBx0uqWbwgrOSKhCEV7EAQPWoy0nAhO7PHryR8ApXimexiAlk4cF-y1XgqE9SFLHeDxxYifAMnoTUenrf8FnOd5-oHBwPUGHRxrOFVw1RegSXzXzHA4c63rBsdD3wa58rC-67IeCmPUQgcUIQA","tags":[]}