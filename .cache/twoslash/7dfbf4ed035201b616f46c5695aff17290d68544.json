{"code":"\ntype Body = {\n  data: string,\n  moreData: number\n}\n\ntype MetaData = {\n  stuff: string\n}\n\ntype Globals = {\n  firstName: string,\n  lastName: string\n}[]\n\nasync function processMessage(record: SQSRecord) {\n  const { id, body, getMessageRecord, getMessageCluster } = \n    readSQSRecord<Body, MetaData, Globals>(record)\n  \n  const messageRecord = await getMessageRecord()\n\n  // Perform a total rewrite of the global store\n  await updateClusterGlobals<Globals>(\n    { pKey: messageRecord.pKey, rKey: messageRecord.rKey },\n    [{ firstName: 'John', lastName: 'Doe' }]\n  )\n\n  // Perform a insert of data to the global store\n  await updateClusterGlobals<Globals>(\n    { pKey: messageRecord.pKey, rKey: messageRecord.rKey },\n    (globals: Globals) => [...globals, { firstName: 'John', lastName: 'Doe' }]\n  )\n}","extension":"ts","highlights":[],"queries":[],"staticQuickInfos":[{"text":"type Body = {\n    data: string;\n    moreData: number;\n}","docs":"","start":6,"length":4,"line":1,"character":5,"targetString":"Body"},{"text":"(property) data: string","docs":"","start":17,"length":4,"line":2,"character":2,"targetString":"data"},{"text":"(property) moreData: number","docs":"","start":33,"length":8,"line":3,"character":2,"targetString":"moreData"},{"text":"type MetaData = {\n    stuff: string;\n}","docs":"","start":58,"length":8,"line":6,"character":5,"targetString":"MetaData"},{"text":"(property) stuff: string","docs":"","start":73,"length":5,"line":7,"character":2,"targetString":"stuff"},{"text":"type Globals = {\n    firstName: string;\n    lastName: string;\n}[]","docs":"","start":95,"length":7,"line":10,"character":5,"targetString":"Globals"},{"text":"(property) firstName: string","docs":"","start":109,"length":9,"line":11,"character":2,"targetString":"firstName"},{"text":"(property) lastName: string","docs":"","start":130,"length":8,"line":12,"character":2,"targetString":"lastName"},{"text":"function processMessage(record: SQSRecord): Promise<void>","docs":"","start":167,"length":14,"line":15,"character":15,"targetString":"processMessage"},{"text":"(parameter) record: SQSRecord","docs":"","start":182,"length":6,"line":15,"character":30,"targetString":"record"},{"text":"(alias) interface SQSRecord\nimport SQSRecord","docs":"","start":190,"length":9,"line":15,"character":38,"targetString":"SQSRecord"},{"text":"const id: string | undefined","docs":"","start":213,"length":2,"line":16,"character":10,"targetString":"id"},{"text":"const body: Body","docs":"","start":217,"length":4,"line":16,"character":14,"targetString":"body"},{"text":"const getMessageRecord: (consistentRead?: boolean | undefined) => Promise<MessageRecord<MetaData, any>>","docs":"","start":223,"length":16,"line":16,"character":20,"targetString":"getMessageRecord"},{"text":"const getMessageCluster: ((consistentRead?: boolean | undefined) => Promise<{\n    record: MessageClusterRecord<MetaData, any>;\n    getGlobals: () => Promise<Globals>;\n}>) | undefined","docs":"","start":241,"length":17,"line":16,"character":38,"targetString":"getMessageCluster"},{"text":"function readSQSRecord<Body, MetaData, Globals>(record: SQSRecord): Response<MetaData, Globals, Body>","docs":"Parse the SQS record to gain access to helpful meta data and getters","start":268,"length":13,"line":17,"character":4,"targetString":"readSQSRecord"},{"text":"type Body = {\n    data: string;\n    moreData: number;\n}","docs":"","start":282,"length":4,"line":17,"character":18,"targetString":"Body"},{"text":"type MetaData = {\n    stuff: string;\n}","docs":"","start":288,"length":8,"line":17,"character":24,"targetString":"MetaData"},{"text":"type Globals = {\n    firstName: string;\n    lastName: string;\n}[]","docs":"","start":298,"length":7,"line":17,"character":34,"targetString":"Globals"},{"text":"(parameter) record: SQSRecord","docs":"","start":307,"length":6,"line":17,"character":43,"targetString":"record"},{"text":"const messageRecord: MessageRecord<MetaData, any>","docs":"","start":326,"length":13,"line":19,"character":8,"targetString":"messageRecord"},{"text":"const getMessageRecord: (consistentRead?: boolean | undefined) => Promise<MessageRecord<MetaData, any>>","docs":"","start":348,"length":16,"line":19,"character":30,"targetString":"getMessageRecord"},{"text":"function updateClusterGlobals<Globals>(key: {\n    pKey: `SQSMessage$${string}`;\n    rKey: `SQSMessage$${string}`;\n}, globals: Globals | ((globals: Globals) => Globals)): Promise<{\n    pKey: string;\n    rKey: string;\n}>","docs":"","start":425,"length":20,"line":22,"character":8,"targetString":"updateClusterGlobals"},{"text":"type Globals = {\n    firstName: string;\n    lastName: string;\n}[]","docs":"","start":446,"length":7,"line":22,"character":29,"targetString":"Globals"},{"text":"(property) pKey: `SQSMessage$${string}`","docs":"","start":462,"length":4,"line":23,"character":6,"targetString":"pKey"},{"text":"const messageRecord: MessageRecord<MetaData, any>","docs":"","start":468,"length":13,"line":23,"character":12,"targetString":"messageRecord"},{"text":"(property) pKey: `SQSMessage$${string}`","docs":"","start":482,"length":4,"line":23,"character":26,"targetString":"pKey"},{"text":"(property) rKey: `SQSMessage$${string}`","docs":"","start":488,"length":4,"line":23,"character":32,"targetString":"rKey"},{"text":"const messageRecord: MessageRecord<MetaData, any>","docs":"","start":494,"length":13,"line":23,"character":38,"targetString":"messageRecord"},{"text":"(property) rKey: `SQSMessage$${string}`","docs":"","start":508,"length":4,"line":23,"character":52,"targetString":"rKey"},{"text":"(property) firstName: string","docs":"","start":523,"length":9,"line":24,"character":7,"targetString":"firstName"},{"text":"(property) lastName: string","docs":"","start":542,"length":8,"line":24,"character":26,"targetString":"lastName"},{"text":"function updateClusterGlobals<Globals>(key: {\n    pKey: `SQSMessage$${string}`;\n    rKey: `SQSMessage$${string}`;\n}, globals: Globals | ((globals: Globals) => Globals)): Promise<{\n    pKey: string;\n    rKey: string;\n}>","docs":"","start":624,"length":20,"line":28,"character":8,"targetString":"updateClusterGlobals"},{"text":"type Globals = {\n    firstName: string;\n    lastName: string;\n}[]","docs":"","start":645,"length":7,"line":28,"character":29,"targetString":"Globals"},{"text":"(property) pKey: `SQSMessage$${string}`","docs":"","start":661,"length":4,"line":29,"character":6,"targetString":"pKey"},{"text":"const messageRecord: MessageRecord<MetaData, any>","docs":"","start":667,"length":13,"line":29,"character":12,"targetString":"messageRecord"},{"text":"(property) pKey: `SQSMessage$${string}`","docs":"","start":681,"length":4,"line":29,"character":26,"targetString":"pKey"},{"text":"(property) rKey: `SQSMessage$${string}`","docs":"","start":687,"length":4,"line":29,"character":32,"targetString":"rKey"},{"text":"const messageRecord: MessageRecord<MetaData, any>","docs":"","start":693,"length":13,"line":29,"character":38,"targetString":"messageRecord"},{"text":"(property) rKey: `SQSMessage$${string}`","docs":"","start":707,"length":4,"line":29,"character":52,"targetString":"rKey"},{"text":"(parameter) globals: Globals","docs":"","start":720,"length":7,"line":30,"character":5,"targetString":"globals"},{"text":"type Globals = {\n    firstName: string;\n    lastName: string;\n}[]","docs":"","start":729,"length":7,"line":30,"character":14,"targetString":"Globals"},{"text":"(parameter) globals: Globals","docs":"","start":745,"length":7,"line":30,"character":30,"targetString":"globals"},{"text":"(property) firstName: string","docs":"","start":756,"length":9,"line":30,"character":41,"targetString":"firstName"},{"text":"(property) lastName: string","docs":"","start":775,"length":8,"line":30,"character":60,"targetString":"lastName"}],"errors":[],"playgroundURL":"https://www.typescriptlang.org/play/#code/JYWwDg9gTgLgBAbzgZQIrIEoFMDG0AmcAvnAGZQQhwDkAhgO4DOAtADa0gBG+t1AUKEiw4AQQDqyMhSp0mzRvgDW-PlgAeQ+DACeYLCnQBZLI0a0A5lgDSWbXAC8cAAZpkx0xawASLwkYwoYAA7cyInPj58XHYofRx2UxQA4PNgUmAsfAAeABUAPjh1GCwg-EYkwJDEPjg4MECAN1piuAB9dv9K1PTMgC44HL4iCODiqFJaHH0AKWQAeQA5atrOlLTtXLyAChrauCbWAFcsfpyAGl3a2LB2KagAfn6txVt+1ZCz-dojk7haIO0AEoHAV-toLns4IwwJMsI8ockqgAfOBBQ5cLBQXaAt6I8xwABkFTWPWy+V2MKgjCwmy2xTUMH6yDxaQyZLyn1iDWADUx8Oerz+AM+B2O-TBwPsoIBOIGFNoVKwdKKuK6nKw3N5DyeL204uFXx++qBIKFQONQwi6k0cB0ejg7jMlgAwkd-JjsHgoNljDBaA4zZ8crRGIpff7HGCCo4ELs7b9PQQcrosLtDlBWKqUhSbHqDG4TE7rLZdlBc0yjIXPLndv5modGEy-TAG7tMRRtWaANoAXVrzYbzogUSb9cYQ6i-YVxXwIkZCK6uzw4FYWBnc6zyNRh1YrCXlBua8ywdDjYGIcUuQv4byvd2wWXh+KJ8UZ5fV9DN7vtU4hxwLxgAAFBUODPWNIQAIT-ADN3MS44HLBds1qYZahANdaHhcM0zAHh13nd44Nqa1gFiRgNyQkJLVUDRoC0FMHSrSxE29LJwwDMFPgg4c7EjAFo2WOpENcR1qxLK5hMrDxLBrWpgHwWC0wzRS0IwrCMN2TgeKbLpCWJEJWUyLJuPwbQ8jjFN+hY-Bkz0KdYEyCjCKnFsz2ZMcXMHYdfnc1yJ1TWpH1XfDYLgFE0V3HC8Mcgi8TbDRSJMJy4sCiAgkYdEYGANLWjwQ4gnnNEMSxYioA7eEwTvYYaJteNz1DNiMI4-iA3AuB0L9fpsNqeN+moP1Q34OT8HhZyVgHRh4V81tqutOjCiKuBrNs-Q2viBsxgDah1vdKBqAhW0Ly2gblAO9DpP0RxqHOot+Fm2jhBKdEkjHQT6iwAAxVhgHMAALeArsAjAAFE4A+gAZABJABxAAJHJ9vvIJAIocwyPKK7IaWIG5mhkHkGQRHUpXI8tudOZDEA8HgZyYGicKMroC24GMAwOYMDuq0HvgJ6qGm8dvLe2Ivp+-6AwABgO4IUYgNHCwDABGcXJf3EmWkcAAmZWDvbJnHAAFm1-sIDAPRCEcABWZXqLq7BoTS6lGr9ZrwTgaHWAgThvgxwM4BM3izQEtr00zSiiKEwURKY4ttFLSSCwu2TDtDUaUrgeTU8XH9tL9niLL0KzcCTFMDssGBRJdN0xnheCtjwdLgHdArsFoEb+i0iBV3+SUChlkBG5pJB4KuIvvS66PXQ2j1R59DCOWHuAy-dz3vaeHu4D7gesmXr3WEYAp4KIefajLiusGsp568YRvimbrBW-hDuu6CdfN8ds-rKd2g8nM6qAHoABUACagAI3gqaktpfr6FcHAWIXpCAwAgIvWgwQ-g4CmIkRBcAoGsDAKQHc7Ump4X9P8QgZcxiMBAXAAAApSDghReQFTgMwAYUD8ywJnraJBlJqRUOobEFsUB0qsP0F7a+OBCHO2IWQJmMA2E3U8EKMha4KEyKgIvD2u9yikI4fAkBf8+D4KCDgLKaUOGt1cJ-f2LtPjsT4q7He3sXbbDgQQCsmAZ6yjtpAdKNJwyfEcXvLiPEChrQdvALSpljQBlmIsAAdDwpUrjvRxMiUCfc6V4Ahy2gAK1IIofA7AADcpAhpwCvvAMAuYAwuCkhdHwCBqCkHwM02grTqBhD+OUKOidxLlPCenc2NA8kFPYKQHJBTvhFLKRU2B1THC1ITvU3w1ARmFNoCUiZPAOlOC6fmM+SdZknQDPlKI6QgiZAyf4W0DFHDLRTHEhRlgwoonuXoOJO0xiljXOmIIglaghwOrUKptggVzNBfBE6YK0lgvjGC+S-Rkn4EedHSG+AwWn2jhfOAdcHY3xKDAFuQyJh7ywD3BeWwQzaGMXAL+2x15bDapCYFuYwWQjLBC5lex5Jsr2ICheqlOpwDSSiv0vLs5ROFTxVJPFxU3L0HKusDlZzzhFUq-CiqJrt2lXWVymqxz+W1aZOJuqvJRDlUFI8KqjXaA+QeYKMU5WHFws0GKNq4nOuiiquVJEyIURFb6pKMALUO0ytlIIuUID5VVdKq+Yacp5QKj6xmUB3W6xKsyoggJARbEBAdYYww5rCCpTSoxJjw1wE9a6yeu1AmMG3popx9jti7F1P0JAIK8w9KLKy8FXa6liTsEQT4uxzCNr3v0OtYUcVbDHSvCdbtx2MHXnWwEfBZRv0HhHPMhFOSIUIsQUJ3zBF-I7Yhag+0+19WoMQaif8-7MOYMwHAhwYBPuYBEOq1iYy7GIbBM60AsAABFmi0H6EVTgmIbYMXDCB52P7xqHFIKQRS1U6pToQ2QUi-gFgcF+Lu3YCQYC4fQqhu8fAS0SLLaYv59QIAYMYGfLYSL3HWWBGEzJiBBmfBhYvNcH8Z6fExRdGtm0SCOHgrECx6ArGysYn6ODtAAlLpcZ43YVz4BPPPpwyM9AUHwGE0WayuaIi1HvRvTEpBoBUH9Igv0rAOH0ECC0CApBIH6DnbvBEgHdgMH05Wl1xRROYjrQ2+d+8diQjPYKLT1kEm9o5XmWLM84mJeIGCrsSB0hUmI3hvq0wIC-SCJeojJHfjUCAxALAN6iB9lqGu3Y5nAKWes38dOvjhCubgNIrBciPPju87EXzengBZMC1gYLUBQt1pbVF7d-RkvwPi6Cq9hCLpxbS8O2unnV6LvC+vLscSjs7aCVx7LOG8s0AK0VkrIZcukZoJV6rxA6twDXUQIAA","tags":[]}